<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/action/ActionInvocation.java" startline="94" endline="96">
public Action < S > getAction () {
    return action;
}
</source>
<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/action/ActionInvocation.java" startline="114" endline="116">
public ActionArgumentValue < S > [] getOutput () {
    return output.values ().toArray (new ActionArgumentValue [output.size ()]);
}
</source>
<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/action/ActionInvocation.java" startline="118" endline="120">
public ActionArgumentValue < S > getOutput (String argumentName) {
    return getOutput (getOutputArgument (argumentName));
}
</source>
<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/action/ActionInvocation.java" startline="126" endline="128">
public ActionArgumentValue < S > getOutput (ActionArgument < S > argument) {
    return output.get (argument.getName ());
}
</source>
<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/action/ActionInvocation.java" startline="130" endline="132">
public void setInput (String argumentName, Object value) throws InvalidValueException {
    setInput (new ActionArgumentValue (getInputArgument (argumentName), value));
}
</source>
<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/action/ActionInvocation.java" startline="134" endline="136">
public void setInput (ActionArgumentValue < S > value) {
    input.put (value.getArgument ().getName (), value);
}
</source>
<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/action/ActionInvocation.java" startline="138" endline="143">
public void setInput (ActionArgumentValue < S > [] input) {
    if (input == null) return;

    for (ActionArgumentValue < S > argumentValue : input) {
        this.input.put (argumentValue.getArgument ().getName (), argumentValue);
    }
}
</source>
<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/action/ActionInvocation.java" startline="175" endline="177">
public ActionException getFailure () {
    return failure;
}
</source>
<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/action/ActionInvocation.java" startline="191" endline="193">
public String toString () {
    return "(" + getClass ().getSimpleName () + ") " + getAction ();
}
</source>
<source file="projects/systems/4thline_cling/cling/core/src/main/java/org/fourthline/cling/model/profile/RemoteClientInfo.java" startline="93" endline="95">
public UpnpHeaders getExtraResponseHeaders () {
    return extraResponseHeaders;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="91" endline="99">
public DIDLContent parseResource (String resource) throws Exception {
    InputStream is = null;
    try {
        is = Thread.currentThread ().getContextClassLoader ().getResourceAsStream (resource);
        return parse (IO.readLines (is));
    } finally {
        if (is != null) is.close ();

    }
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="108" endline="120">
public DIDLContent parse (String xml) throws Exception {
    if (xml == null || xml.length () == 0) {
        throw new RuntimeException ("Null or empty XML");
    }
    DIDLContent content = new DIDLContent ();
    createRootHandler (content, this);
    log.fine ("Parsing DIDL XML content");
    parse (new InputSource (new StringReader (xml)));
    return content;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="276" endline="278">
public String generate (DIDLContent content) throws Exception {
    return generate (content, false);
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="294" endline="296">
public String generate (DIDLContent content, boolean nestedItems) throws Exception {
    return documentToString (buildDOM (content, nestedItems), true);
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="300" endline="322">
protected String documentToString (Document document, boolean omitProlog) throws Exception {
    TransformerFactory transFactory = TransformerFactory.newInstance ();
    Transformer transformer = transFactory.newTransformer ();
    if (omitProlog) {
        transformer.setOutputProperty (OutputKeys.OMIT_XML_DECLARATION, "yes");
    }
    StringWriter out = new StringWriter ();
    transformer.transform (new DOMSource (document), new StreamResult (out));
    return out.toString ();
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="625" endline="631">
public void debugXML (String s) {
    if (log.isLoggable (Level.FINE)) {
        log.fine ("-------------------------------------------------------------------------------------");
        log.fine ("\n" + s);
        log.fine ("-------------------------------------------------------------------------------------");
    }
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="841" endline="865">
public void startElement (String uri, String localName, String qName, Attributes attributes) throws SAXException {
    super.startElement (uri, localName, qName, attributes);
    if (! DIDLContent.NAMESPACE_URI.equals (uri)) return;

    if (localName.equals ("container")) {
        Container container = createContainer (attributes);
        getInstance ().addContainer (container);
        createContainerHandler (container, this);
    } else if (localName.equals ("item")) {
        Item item = createItem (attributes);
        getInstance ().addItem (item);
        createItemHandler (item, this);
    } else if (localName.equals ("desc")) {
        DescMeta desc = createDescMeta (attributes);
        getInstance ().addDescMetadata (desc);
        createDescMetaHandler (desc, this);
    }

}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="887" endline="920">
public void startElement (String uri, String localName, String qName, Attributes attributes) throws SAXException {
    super.startElement (uri, localName, qName, attributes);
    if (! DIDLContent.NAMESPACE_URI.equals (uri)) return;

    if (localName.equals ("item")) {
        Item item = createItem (attributes);
        getInstance ().addItem (item);
        createItemHandler (item, this);
    } else if (localName.equals ("desc")) {
        DescMeta desc = createDescMeta (attributes);
        getInstance ().addDescMetadata (desc);
        createDescMetaHandler (desc, this);
    } else if (localName.equals ("res")) {
        Res res = createResource (attributes);
        if (res != null) {
            getInstance ().addResource (res);
            createResHandler (res, this);
        }
    }

}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="969" endline="989">
public void startElement (String uri, String localName, String qName, Attributes attributes) throws SAXException {
    super.startElement (uri, localName, qName, attributes);
    if (! DIDLContent.NAMESPACE_URI.equals (uri)) return;

    if (localName.equals ("res")) {
        Res res = createResource (attributes);
        if (res != null) {
            getInstance ().addResource (res);
            createResHandler (res, this);
        }
    } else if (localName.equals ("desc")) {
        DescMeta desc = createDescMeta (attributes);
        getInstance ().addDescMetadata (desc);
        createDescMetaHandler (desc, this);
    }

}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/contentdirectory/DIDLParser.java" startline="1046" endline="1059">
public void startElement (String uri, String localName, String qName, Attributes attributes) throws SAXException {
    super.startElement (uri, localName, qName, attributes);
    Element newEl = getInstance ().getMetadata ().createElementNS (uri, qName);
    for (int i = 0;
    i < attributes.getLength (); i ++) {
        newEl.setAttributeNS (attributes.getURI (i), attributes.getQName (i), attributes.getValue (i));
    }
    current.appendChild (newEl);
    current = newEl;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/PortMapping.java" startline="112" endline="114">
public boolean isEnabled () {
    return enabled;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/PortMapping.java" startline="120" endline="122">
public UnsignedIntegerFourBytes getLeaseDurationSeconds () {
    return leaseDurationSeconds;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/PortMapping.java" startline="128" endline="130">
public boolean hasRemoteHost () {
    return remoteHost != null && remoteHost.length () > 0;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/PortMapping.java" startline="140" endline="142">
public UnsignedIntegerTwoBytes getExternalPort () {
    return externalPort;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/PortMapping.java" startline="148" endline="150">
public UnsignedIntegerTwoBytes getInternalPort () {
    return internalPort;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/PortMapping.java" startline="156" endline="158">
public String getInternalClient () {
    return internalClient;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/PortMapping.java" startline="164" endline="166">
public Protocol getProtocol () {
    return protocol;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/PortMapping.java" startline="172" endline="174">
public boolean hasDescription () {
    return description != null;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/PortMapping.java" startline="176" endline="178">
public String getDescription () {
    return description == null ? "-" : description;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/DIDLObject.java" startline="774" endline="778">
public DIDLObject addProperty (Property property) {
    if (property == null) return this;

    getProperties ().add (property);
    return this;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/DIDLObject.java" startline="816" endline="821">
public boolean hasProperty (java.lang.Class < ? extends Property > propertyClass) {
    for (Property property : getProperties ()) {
        if (propertyClass.isInstance (property)) return true;

    }
    return false;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/AVTransport.java" startline="58" endline="60">
public MediaInfo getMediaInfo () {
    return mediaInfo;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/AVTransport.java" startline="66" endline="68">
public TransportInfo getTransportInfo () {
    return transportInfo;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/model/AVTransport.java" startline="74" endline="76">
public PositionInfo getPositionInfo () {
    return positionInfo;
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/lastchange/LastChange.java" startline="72" endline="75">
synchronized public void reset () {
    previousValue = toString ();
    event.clear ();
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/lastchange/LastChange.java" startline="77" endline="79">
synchronized public void setEventedValue (int instanceID, EventedValue...ev) {
    setEventedValue (new UnsignedIntegerFourBytes (instanceID), ev);
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/lastchange/LastChange.java" startline="81" endline="87">
synchronized public void setEventedValue (UnsignedIntegerFourBytes instanceID, EventedValue...ev) {
    for (EventedValue eventedValue : ev) {
        if (eventedValue != null) event.setEventedValue (instanceID, eventedValue);

    }
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/lastchange/LastChange.java" startline="89" endline="95">
synchronized public UnsignedIntegerFourBytes [] getInstanceIDs () {
    List < UnsignedIntegerFourBytes > list = new ArrayList < > ();
    for (InstanceID instanceID : event.getInstanceIDs ()) {
        list.add (instanceID.getId ());
    }
    return list.toArray (new UnsignedIntegerFourBytes [list.size ()]);
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/lastchange/LastChange.java" startline="102" endline="104">
synchronized public < EV extends EventedValue > EV getEventedValue (int instanceID, Class < EV > type) {
    return getEventedValue (new UnsignedIntegerFourBytes (instanceID), type);
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/lastchange/LastChange.java" startline="106" endline="108">
synchronized public < EV extends EventedValue > EV getEventedValue (UnsignedIntegerFourBytes id, Class < EV > type) {
    return event.getEventedValue (id, type);
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/lastchange/LastChange.java" startline="110" endline="116">
synchronized public void fire (PropertyChangeSupport propertyChangeSupport) {
    String lastChanges = toString ();
    if (lastChanges != null && lastChanges.length () > 0) {
        propertyChangeSupport.firePropertyChange ("LastChange", previousValue, lastChanges);
        reset ();
    }
}
</source>
<source file="projects/systems/4thline_cling/cling/support/src/main/java/org/fourthline/cling/support/lastchange/LastChange.java" startline="119" endline="126">
synchronized public String toString () {
    if (! event.hasChanges ()) return "";

    try {
        return parser.generate (event);
    } catch (Exception ex) {
        throw new RuntimeException (ex);
    }
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/serializer/src/com/bj58/spat/gaea/serializer/serializer/Serializer.java" startline="75" endline="97">
public byte [] Serialize (Object obj) throws Exception {
    GaeaOutStream stream = null;
    try {
        stream = new GaeaOutStream ();
        stream.Encoder = _Encoder;
        if (obj == null) {
            SerializerFactory.GetSerializer (null).WriteObject (obj, stream);
        } else {
            Class type = obj.getClass ();
            if (obj instanceof IGaeaSerializer) {
                ((IGaeaSerializer) obj).Serialize (stream);
            } else {
                SerializerFactory.GetSerializer (type).WriteObject (obj, stream);
            }
        }
        byte [] result = stream.toByteArray ();
        return result;
    } finally {
        if (stream != null) {
            stream.close ();
        }
    }
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/serializer/src/com/bj58/spat/gaea/serializer/serializer/Serializer.java" startline="103" endline="119">
public Object Derialize (byte [] buffer, Class type) throws Exception {
    GaeaInStream stream = null;
    try {
        stream = new GaeaInStream (buffer);
        stream.Encoder = _Encoder;
        if (ClassHelper.InterfaceOf (type, IGaeaSerializer.class)) {
            IGaeaSerializer obj = (IGaeaSerializer) type.newInstance ();
            obj.Derialize (stream);
            return obj;
        }
        return SerializerFactory.GetSerializer (type).ReadObject (stream, type);
    } finally {
        if (stream != null) {
            stream.close ();
        }
    }
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/communication/http/RequestMapping.java" startline="73" endline="128">
public static Action getAction (HttpContext context) throws Exception {
    logger.debug ("http-method:" + context.getMethod ());
    logger.debug ("uri:" + context.getUri ());
    String regUrl = getKey (context.getUri ());
    logger.debug ("reg-url:" + regUrl);
    if (regUrl == null || regUrl.equalsIgnoreCase ("")) {
        throw new HttpException ("url not match!!!", 404, null);
    }
    Controler controler = urlMap.get (regUrl);
    Action action = getAction (context.getMethod (), controler);
    Pattern pattern = Pattern.compile (regUrl);
    Matcher matcher = pattern.matcher (context.getUri ());
    if (matcher.find ()) {
        for (Parameter para : action.getParamList ()) {
            if (para.getParaType () == HttpParameterType.PathParameter) {
                logger.debug ("url para-mapping:" + para.getMapping () + "--value:" + matcher.group (para.getUrlParaIndex () + 1));
                String value = matcher.group (para.getUrlParaIndex () + 1);
                para.setValue (value);
            }
        }
    }
    if (context.getContentBuffer () != null && context.getContentBuffer ().length > 0) {
        String content = new String (context.getContentBuffer (), Global.getSingleton ().getServiceConfig ().getString ("gaea.encoding"));
        KeyValue [] kvs = (KeyValue []) JsonHelper.toJava (content, KeyValue [].class);
        for (KeyValue kv : kvs) {
            for (Parameter para : action.getParamList ()) {
                if (para.getMapping ().equalsIgnoreCase (kv.getKey ())) {
                    logger.debug ("content para-mapping:" + para.getMapping () + "--value:" + kv.getValue ());
                    String value = kv.getValue ();
                    para.setValue (value);
                    break;
                }
            }
        }
    }
    return action;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/communication/http/RequestMapping.java" startline="136" endline="144">
protected static String getKey (String uri) {
    Set < String > set = urlMap.keySet ();
    for (String reg : set) {
        if (uri.matches (reg)) {
            return reg;
        }
    }
    return null;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/communication/http/RequestMapping.java" startline="153" endline="164">
protected static int getUrlParaIndex (String uri, String mapping) throws Exception {
    Matcher matcher = patternParam.matcher (uri);
    int index = 0;
    while (matcher.find ()) {
        if (matcher.group (1).equalsIgnoreCase (mapping)) {
            return index;
        }
        index ++;
    }
    throw new Exception ("not mapping");
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/communication/http/RequestMapping.java" startline="192" endline="216">
protected static Action getAction (HttpRequestMethod method, Controler controler) {
    Action action = null;
    switch (method) {
        case GET :
            action = controler.getGetAction ();
            break;
        case POST :
            action = controler.getPostAction ();
            break;
        case DELETE :
            action = controler.getDeleteAction ();
            break;
        case PUT :
            action = controler.getPutAction ();
            break;
        case HEAD :
            action = controler.getHeadAction ();
            break;
        default :
            action = controler.getGetAction ();
            break;
    }
    return action;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/communication/http/RequestMapping.java" startline="224" endline="242">
protected static String createRegexUrl (String sourceUrl, ParamInfo [] piAry) {
    String regUrl = sourceUrl.toLowerCase ();
    for (ParamInfo pi : piAry) {
        if (pi.getHttpPathParameter () == null || pi.getHttpPathParameter ().paramType () == HttpParameterType.PathParameter) {
            if (pi.getCls () == byte.class || pi.getCls () == Byte.class || pi.getCls () == short.class || pi.getCls () == Short.class || pi.getCls () == int.class || pi.getCls () == Integer.class || pi.getCls () == long.class || pi.getCls () == Long.class || pi.getCls () == double.class || pi.getCls () == Double.class) {
                regUrl = regUrl.replaceFirst ("\\{" + pi.getMapping ().toLowerCase () + "\\}", "(\\\\d+)");
            } else {
                regUrl = regUrl.replaceFirst ("\\{" + pi.getMapping ().toLowerCase () + "\\}", "(\\\\w+)");
            }
        }
    }
    return regUrl;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/communication/http/RequestMapping.java" startline="251" endline="276">
protected static Object convertValue (String type, String value) throws Exception {
    Object obj = null;
    if (type.equalsIgnoreCase ("String")) {
        obj = value;
    } else if (type.equalsIgnoreCase ("int") || type.equalsIgnoreCase ("Integer")) {
        obj = javaConvert.convertToint (value);
    } else if (type.equalsIgnoreCase ("long")) {
        obj = javaConvert.convertTolong (value);
    } else if (type.equalsIgnoreCase ("short")) {
        obj = javaConvert.convertToshort (value);
    } else if (type.equalsIgnoreCase ("float")) {
        obj = javaConvert.convertTofloat (value);
    } else if (type.equalsIgnoreCase ("boolean")) {
        obj = javaConvert.convertToboolean (value);
    } else if (type.equalsIgnoreCase ("double")) {
        obj = javaConvert.convertTodouble (value);
    } else if (type.equalsIgnoreCase ("char") || type.equalsIgnoreCase ("Character")) {
        obj = javaConvert.convertTochar (value);
    } else if (type.equalsIgnoreCase ("byte")) {
        obj = javaConvert.convertTobyte (value);
    } else {
        obj = jsonConvert.convertToT (value, Class.forName (type));
    }

    return obj;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/communication/http/RequestMapping.java" startline="282" endline="401">
public static void init () throws Exception {
    logger.info ("begin init http request mapping...");
    urlMap.clear ();
    StringBuffer sbMsg = new StringBuffer ();
    String servicePath = Global.getSingleton ().getRootPath () + "/service/deploy/" + Global.getSingleton ().getServiceConfig ().getString ("gaea.service.name");
    DynamicClassLoader classLoader = new DynamicClassLoader ();
    classLoader.addFolder (servicePath);
    List < ClassInfo > ciList = ScanClass.getBehaviorClassInfos (servicePath, classLoader);
    for (ClassInfo ci : ciList) {
        List < MethodInfo > miList = ci.getMethodList ();
        for (MethodInfo mi : miList) {
            if (mi.getHttpRequestMapping () != null) {
                String uri = mi.getHttpRequestMapping ().uri ();
                String regUrl = createRegexUrl (uri, mi.getParamInfoAry ());
                Controler controler = urlMap.get (regUrl);
                if (controler == null) {
                    controler = new Controler ();
                }
                sbMsg.append ("\n----------------- url mapping -----------------");
                sbMsg.append ("\nurl:" + uri);
                sbMsg.append ("\nreg-url:" + regUrl);
                sbMsg.append ("\nlookUP:");
                sbMsg.append (ci.getLookUP ());
                sbMsg.append ("\nmethodName:");
                sbMsg.append (mi.getMethod ().getName ());
                Action action = new Action ();
                action.setLookup (ci.getLookUP ());
                action.setMethodName (mi.getMethod ().getName ());
                List < Parameter > paramList = new ArrayList < Parameter > ();
                ParamInfo [] piAry = mi.getParamInfoAry ();
                for (int i = 0;
                i < piAry.length; i ++) {
                    String paraTypeName = piAry [i].getType ().toString ().replaceFirst ("class ", "");
                    if (paraTypeName.startsWith ("[")) {
                        paraTypeName = piAry [i].getCls ().getCanonicalName ();
                    }
                    sbMsg.append ("\n\nparaTypeName:");
                    sbMsg.append (paraTypeName);
                    sbMsg.append ("\nmapping:");
                    sbMsg.append (piAry [i].getMapping ());
                    if (piAry [i].getHttpPathParameter () != null && piAry [i].getHttpPathParameter ().paramType () == HttpParameterType.ContentParameter) {
                        paramList.add (new Parameter (paraTypeName, piAry [i].getMapping (), null, 0, getContentParaIndex (piAry, piAry [i]), piAry [i].getIndex (), HttpParameterType.ContentParameter));
                        sbMsg.append ("\ncontentParamIndex:");
                        sbMsg.append (getContentParaIndex (piAry, piAry [i]));
                        sbMsg.append ("\nparamType:");
                        sbMsg.append (HttpParameterType.ContentParameter);
                    } else {
                        paramList.add (new Parameter (paraTypeName, piAry [i].getMapping (), null, getUrlParaIndex (uri, piAry [i].getMapping ()), 0, piAry [i].getIndex (), HttpParameterType.PathParameter));
                        sbMsg.append ("\nurlParamIndex:");
                        sbMsg.append (getUrlParaIndex (uri, piAry [i].getMapping ()));
                        sbMsg.append ("\nparamType:");
                        sbMsg.append (HttpParameterType.PathParameter);
                    }
                    sbMsg.append ("\nmethodParamIndex:");
                    sbMsg.append (piAry [i].getIndex ());
                }
                action.setParamList (paramList);
                HttpRequestMethod [] methodAry = mi.getHttpRequestMapping ().method ();
                for (HttpRequestMethod method : methodAry) {
                    sbMsg.append ("\nhttpMethod:");
                    sbMsg.append (method);
                    if (method == HttpRequestMethod.GET) {
                        controler.setGetAction (action);
                    } else if (method == HttpRequestMethod.POST) {
                        controler.setPostAction (action);
                    } else if (method == HttpRequestMethod.DELETE) {
                        controler.setDeleteAction (action);
                    } else if (method == HttpRequestMethod.HEAD) {
                        controler.setHeadAction (action);
                    } else if (method == HttpRequestMethod.PUT) {
                        controler.setPutAction (action);
                    }

                }
                urlMap.put (regUrl, controler);
                sbMsg.append ("\n\n");
            }
        }
    }
    logger.debug (sbMsg.toString ());
    logger.info ("finish init http request mapping!");
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="34" endline="36">
public Boolean convertToBoolean (Object obj) {
    return new Boolean (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="39" endline="41">
public Byte convertToByte (Object obj) {
    return new Byte (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="44" endline="53">
public Character convertToCharacter (Object obj) {
    String str = obj.toString ();
    if (str.length () > 1) {
        str = str.replaceFirst ("\"", "");
    }
    if (! str.equals (null) && ! str.equals ("")) {
        return new Character (str.charAt (0));
    }
    return new Character ('\0');
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="56" endline="58">
public Double convertToDouble (Object obj) {
    return new Double (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="61" endline="63">
public Float convertToFloat (Object obj) {
    return new Float (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="66" endline="68">
public Integer convertToInteger (Object obj) {
    return new Integer (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="71" endline="73">
public Long convertToLong (Object obj) {
    return new Long (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="76" endline="78">
public Short convertToShort (Object obj) {
    return new Short (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="81" endline="86">
public String convertToString (Object obj) {
    if (obj == null) {
        return "";
    }
    return obj.toString ();
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="89" endline="91">
public boolean convertToboolean (Object obj) {
    return Boolean.parseBoolean (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="94" endline="96">
public byte convertTobyte (Object obj) {
    return Byte.parseByte (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="99" endline="108">
public char convertTochar (Object obj) {
    String str = obj.toString ();
    if (str.length () > 1) {
        str = str.replaceFirst ("\"", "");
    }
    if (! str.equals (null) && ! str.equals ("")) {
        return str.charAt (0);
    }
    return '\0';
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="111" endline="113">
public double convertTodouble (Object obj) {
    return Double.parseDouble (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="116" endline="118">
public float convertTofloat (Object obj) {
    return Float.parseFloat (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="121" endline="123">
public int convertToint (Object obj) {
    return Integer.parseInt (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="126" endline="128">
public long convertTolong (Object obj) {
    return Long.parseLong (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="131" endline="133">
public short convertToshort (Object obj) {
    return Short.parseShort (obj.toString ());
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="136" endline="141">
public Object convertToT (Object obj, Class < ? > clazz) throws Exception {
    if (obj == null || obj.toString ().equalsIgnoreCase ("")) {
        return null;
    }
    return JsonHelper.toJava (obj.toString (), clazz);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/core/com/bj58/spat/gaea/server/core/convert/JsonConvert.java" startline="144" endline="149">
public Object convertToT (Object obj, Class < ? > containClass, Class < ? > itemClass) throws Exception {
    if (obj == null || obj.toString ().equalsIgnoreCase ("")) {
        return null;
    }
    return JsonHelper.toJava (obj.toString (), containClass, itemClass);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/bootstrap/com/bj58/spat/gaea/server/bootstrap/Main.java" startline="63" endline="218">
public static void main (String [] args) throws Exception {
    if (args.length < 1) {
        throw new IllegalArgumentException ("usage: -Dgaea.service.name=<service-name> [<other-gaea-config>]");
    }
    String userDir = System.getProperty ("user.dir");
    String rootPath = userDir + "/../";
    String serviceName = null;
    Map < String, String > argsMap = new HashMap < String, String > ();
    Global.getSingleton ().setRootPath (rootPath);
    for (int i = 0;
    i < args.length; i ++) {
        if (args [i].startsWith ("-D")) {
            String [] aryArg = args [i].split ("=");
            if (aryArg.length == 2) {
                if (aryArg [0].equalsIgnoreCase ("-Dgaea.service.name")) {
                    serviceName = aryArg [1];
                }
                argsMap.put (aryArg [0].replaceFirst ("-D", ""), aryArg [1]);
            }
        }
    }
    if (serviceName == null) {
        throw new Exception ("no service name please set it");
    }
    String serviceFolderPath = rootPath + "service/deploy/" + serviceName;
    String gaeaConfigDefaultPath = rootPath + "conf/gaea_config.xml";
    String gaeaConfigPath = serviceFolderPath + "/gaea_config.xml";
    String log4jConfigDefaultPath = rootPath + "conf/gaea_log4j.xml";
    String log4jConfigPath = serviceFolderPath + "/gaea_log4j.xml";
    loadLog4jConfig (log4jConfigPath, log4jConfigDefaultPath);
    logger = LogFactory.getLogger (Main.class);
    logger.info ("+++++++++++++++++++++ staring +++++++++++++++++++++\n");
    logger.info ("user.dir: " + userDir);
    logger.info ("rootPath: " + rootPath);
    logger.info ("service gaea_config.xml: " + gaeaConfigPath);
    logger.info ("default gaea_config.xml: " + gaeaConfigDefaultPath);
    logger.info ("service gaea_log4j.xml: " + log4jConfigPath);
    logger.info ("default gaea_log4j.xml: " + log4jConfigDefaultPath);
    logger.info ("load service config...");
    ServiceConfig sc = loadServiceConfig (gaeaConfigDefaultPath, gaeaConfigPath);
    Set < String > keySet = argsMap.keySet ();
    for (String key : keySet) {
        logger.info (key + ": " + argsMap.get (key));
        sc.set (key, argsMap.get (key));
    }
    if (sc.getString ("gaea.service.name") == null || sc.getString ("gaea.service.name").equalsIgnoreCase ("")) {
        logger.info ("gaea.service.name:" + serviceName);
        sc.set ("gaea.service.name", serviceName);
    }
    Global.getSingleton ().setServiceConfig (sc);
    logger.info ("-----------------loading global jars------------------");
    DynamicClassLoader classLoader = new DynamicClassLoader ();
    classLoader.addFolder (rootPath + "service/deploy/" + sc.getString ("gaea.service.name") + "/", rootPath + "service/lib/", rootPath + "lib");
    GlobalClassLoader.addSystemClassPathFolder (rootPath + "service/deploy/" + sc.getString ("gaea.service.name") + "/", rootPath + "service/lib/", rootPath + "lib");
    logger.info ("-------------------------end-------------------------\n");
    if (new File (serviceFolderPath).isDirectory () || ! serviceName.equalsIgnoreCase ("error_service_name_is_null")) {
        logger.info ("--------------------loading proxys-------------------");
        IProxyFactory proxyFactory = ProxyFactoryLoader.loadProxyFactory (classLoader);
        Global.getSingleton ().setProxyFactory (proxyFactory);
        logger.info ("-------------------------end-------------------------\n");
        logger.info ("-----------------loading init beans------------------");
        loadInitBeans (classLoader, sc);
        logger.info ("-------------------------end-------------------------\n");
    }
    logger.info ("-----------loading global request filters------------");
    List < IFilter > requestFilters = loadFilters (classLoader, sc, "gaea.filter.global.request");
    for (IFilter filter : requestFilters) {
        Global.getSingleton ().addGlobalRequestFilter (filter);
    }
    logger.info ("-------------------------end-------------------------\n");
    logger.info ("-----------loading global response filters-----------");
    List < IFilter > responseFilters = loadFilters (classLoader, sc, "gaea.filter.global.response");
    for (IFilter filter : responseFilters) {
        Global.getSingleton ().addGlobalResponseFilter (filter);
    }
    logger.info ("-------------------------end-------------------------\n");
    logger.info ("-----------loading connection filters-----------");
    List < IFilter > connFilters = loadFilters (classLoader, sc, "gaea.filter.connection");
    for (IFilter filter : connFilters) {
        Global.getSingleton ().addConnectionFilter (filter);
    }
    logger.info ("-------------------------end-------------------------\n");
    logger.info ("------------------load secureKey start---------------------");
    if (sc.getString ("gaea.secure") != null && "true".equalsIgnoreCase (sc.getString ("gaea.secure"))) {
        logger.info ("gaea.secure:" + sc.getString ("gaea.secure"));
        loadSecureKey (sc, serviceFolderPath);
    }
    logger.info ("------------------load secureKey end----------------------\n");
    logger.info ("------------------signal registr start---------------------");
    String osName = System.getProperty ("os.name").toLowerCase ();
    if (osName != null && osName.indexOf ("window") == - 1) {
        OperateSignal operateSignalHandler = new OperateSignal ();
        Signal sig = new Signal ("USR2");
        Signal.handle (sig, operateSignalHandler);
    }
    logger.info ("------------------signal registr success----------------------\n");
    logger.info ("------------------ starting servers -----------------");
    loadServers (classLoader, sc);
    logger.info ("-------------------------end-------------------------\n");
    if (sc.getBoolean ("gaea.hotdeploy")) {
        logger.info ("------------------init file monitor-----------------");
        addFileMonitor (rootPath, sc.getString ("gaea.service.name"));
        logger.info ("-------------------------end-------------------------\n");
    }
    try {
        registerExcetEven ();
    } catch (Exception e) {
        logger.error ("registerExcetEven error", e);
        System.exit (0);
    }
    logger.info ("+++++++++++++++++++++ server start success!!! +++++++++++++++++++++\n");
    while (true) {
        Thread.sleep (1 * 60 * 60 * 1000);
    }
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/util/com/bj58/spat/gaea/server/util/Util.java" startline="38" endline="77">
public static String getSimpleParaName (String paraName) {
    paraName = paraName.replaceAll (" ", "");
    if (paraName.indexOf (".") > 0) {
        String [] pnAry = paraName.split ("");
        List < String > originalityList = new ArrayList < String > ();
        List < String > replaceList = new ArrayList < String > ();
        String tempP = "";
        for (int i = 0;
        i < pnAry.length; i ++) {
            if (pnAry [i].equalsIgnoreCase ("<")) {
                originalityList.add (tempP);
                replaceList.add (tempP.substring (tempP.lastIndexOf (".") + 1));
                tempP = "";
            } else if (pnAry [i].equalsIgnoreCase (">")) {
                originalityList.add (tempP);
                replaceList.add (tempP.substring (tempP.lastIndexOf (".") + 1));
                tempP = "";
            } else if (pnAry [i].equalsIgnoreCase (",")) {
                originalityList.add (tempP);
                replaceList.add (tempP.substring (tempP.lastIndexOf (".") + 1));
                tempP = "";
            } else if (i == pnAry.length - 1) {
                originalityList.add (tempP);
                replaceList.add (tempP.substring (tempP.lastIndexOf (".") + 1));
                tempP = "";
            } else {
                if (! pnAry [i].equalsIgnoreCase ("[") && ! pnAry [i].equalsIgnoreCase ("]")) {
                    tempP += pnAry [i];
                }
            }

        }
        for (int i = 0;
        i < replaceList.size (); i ++) {
            paraName = paraName.replaceAll (originalityList.get (i), replaceList.get (i));
        }
        return paraName;
    } else {
        return paraName;
    }
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/util/com/bj58/spat/gaea/server/util/IPTable.java" startline="40" endline="61">
public static void init () {
    String allowIP = Global.getSingleton ().getServiceConfig ().getString ("gaea.iptable.allow.iplist");
    String forbidIP = Global.getSingleton ().getServiceConfig ().getString ("gaea.iptable.forbid.iplist");
    allowIP = allowIP.replaceAll ("\\.", "\\\\.").replaceAll (",", "|").replaceAll ("\\*", "\\.\\*");
    forbidIP = forbidIP.replaceAll ("\\.", "\\\\.").replaceAll (",", "|").replaceAll ("\\*", "\\.\\*");
    if (allowIP != null && ! allowIP.equalsIgnoreCase ("")) {
        allowPattern = Pattern.compile (allowIP);
    } else {
        allowPattern = null;
    }
    if (forbidIP != null && ! forbidIP.equalsIgnoreCase ("")) {
        forbidPattern = Pattern.compile (forbidIP);
    } else {
        forbidPattern = null;
    }
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/util/com/bj58/spat/gaea/server/util/IPTable.java" startline="68" endline="84">
public static boolean isAllow (String ip) {
    if (ip != null && ! ip.equalsIgnoreCase ("")) {
        boolean allowMatch = true;
        boolean forbidMatch = false;
        if (allowPattern != null) {
            allowMatch = allowPattern.matcher (ip).find ();
        }
        if (forbidPattern != null) {
            forbidMatch = forbidPattern.matcher (ip).find ();
        }
        return (allowMatch && ! forbidMatch);
    }
    return false;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/deploy/com/bj58/spat/gaea/server/deploy/bytecode/CreateManager.java" startline="42" endline="73">
public IProxyFactory careteProxy (String serviceRootPath, DynamicClassLoader classLoader) throws Exception {
    String configPath = serviceRootPath + "/" + Constant.SERVICE_CONTRACT;
    File file = new File (configPath);
    ContractInfo serviceContract = null;
    if (file != null && file.exists ()) {
        serviceContract = ContractConfig.loadContractInfo (configPath, classLoader);
    } else {
        serviceContract = ScanClass.getContractInfo (serviceRootPath + "/", classLoader);
    }
    long time = System.currentTimeMillis ();
    List < ClassFile > localProxyList = new ProxyClassCreater ().createProxy (classLoader, serviceContract, time);
    logger.info ("proxy class buffer creater finish!!!");
    ClassFile cfProxyFactory = new ProxyFactoryCreater ().createProxy (classLoader, serviceContract, time);
    logger.info ("proxy factory buffer creater finish!!!");
    List < IProxyStub > localProxyAry = new ArrayList < IProxyStub > ();
    for (ClassFile cf : localProxyList) {
        Class < ? > cls = classLoader.findClass (cf.getClsName (), cf.getClsByte (), null);
        logger.info ("dynamic load class:" + cls.getName ());
        localProxyAry.add ((IProxyStub) cls.newInstance ());
    }
    Class < ? > proxyFactoryCls = classLoader.findClass (cfProxyFactory.getClsName (), cfProxyFactory.getClsByte (), null);
    Constructor < ? > constructor = proxyFactoryCls.getConstructor (List.class);
    IProxyFactory pfInstance = (IProxyFactory) constructor.newInstance (localProxyAry);
    logger.info ("crate ProxyFactory instance!!!");
    return pfInstance;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/deploy/com/bj58/spat/gaea/server/deploy/bytecode/ScanClass.java" startline="83" endline="93">
public static ContractInfo getContractInfo (String path, DynamicClassLoader classLoader) throws Exception {
    if (contractInfo == null) {
        synchronized (lockHelper) {
            if (contractInfo == null) {
                scan (path, classLoader);
            }
        }
    }
    return contractInfo;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/deploy/com/bj58/spat/gaea/server/deploy/bytecode/ScanClass.java" startline="102" endline="112">
public static List < ClassInfo > getContractClassInfos (String path, DynamicClassLoader classLoader) throws Exception {
    if (contractInfo == null) {
        synchronized (lockHelper) {
            if (contractInfo == null) {
                scan (path, classLoader);
            }
        }
    }
    return contractClassInfos;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/deploy/com/bj58/spat/gaea/server/deploy/bytecode/ScanClass.java" startline="121" endline="131">
public static List < ClassInfo > getBehaviorClassInfos (String path, DynamicClassLoader classLoader) throws Exception {
    if (contractInfo == null) {
        synchronized (lockHelper) {
            if (contractInfo == null) {
                scan (path, classLoader);
            }
        }
    }
    return behaviorClassInfos;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/deploy/com/bj58/spat/gaea/server/deploy/bytecode/ScanClass.java" startline="202" endline="224">
protected static ClassInfo contract (Class < ? > cls, boolean ignoreAnnotation) {
    if (ignoreAnnotation) {
        ClassInfo ci = new ClassInfo ();
        ci.setCls (cls);
        ci.setClassType (ClassInfo.ClassType.INTERFACE);
        Method [] methods = cls.getDeclaredMethods ();
        List < ClassInfo.MethodInfo > methodInfos = new ArrayList < ClassInfo.MethodInfo > ();
        for (Method m : methods) {
            if (Modifier.isPublic (m.getModifiers ()) || Modifier.isProtected (m.getModifiers ())) {
                ClassInfo.MethodInfo mi = new ClassInfo.MethodInfo ();
                mi.setMethod (m);
                methodInfos.add (mi);
            }
        }
        ci.setMethodList (methodInfos);
        return ci;
    } else {
        return contract (cls);
    }
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/deploy/com/bj58/spat/gaea/server/deploy/bytecode/ScanClass.java" startline="231" endline="269">
protected static ClassInfo contract (Class < ? > cls) {
    ServiceContract contractAnn = cls.getAnnotation (ServiceContract.class);
    ClassInfo ci = new ClassInfo ();
    ci.setCls (cls);
    ci.setClassType (ClassInfo.ClassType.INTERFACE);
    List < Class < ? > > interfaceList = getInterfaces (cls);
    List < ClassInfo.MethodInfo > methodInfos = new ArrayList < ClassInfo.MethodInfo > ();
    for (Class < ? > interfaceCls : interfaceList) {
        Method [] methods = interfaceCls.getDeclaredMethods ();
        if (contractAnn != null && contractAnn.defaultAll ()) {
            for (Method m : methods) {
                if (Modifier.isPublic (m.getModifiers ()) || Modifier.isProtected (m.getModifiers ())) {
                    ClassInfo.MethodInfo mi = new ClassInfo.MethodInfo ();
                    mi.setMethod (m);
                    methodInfos.add (mi);
                }
            }
        } else {
            for (Method m : methods) {
                if (Modifier.isPublic (m.getModifiers ()) || Modifier.isProtected (m.getModifiers ())) {
                    OperationContract oc = m.getAnnotation (OperationContract.class);
                    if (oc != null) {
                        ClassInfo.MethodInfo mi = new ClassInfo.MethodInfo ();
                        mi.setMethod (m);
                        methodInfos.add (mi);
                    }
                }
            }
        }
    }
    ci.setMethodList (methodInfos);
    return ci;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/deploy/com/bj58/spat/gaea/server/deploy/bytecode/ProxyClassCreater.java" startline="161" endline="438">
public String createMethods (String className, String methodName, List < Method > methodList, List < String > uniqueNameList) {
    StringBuilder sb = new StringBuilder ();
    sb.append ("public " + Constant.GAEARESPONSE_CLASS_NAME + " ");
    sb.append (methodName);
    sb.append ("(" + Constant.GAEACONTEXT_CLASS_NAME + " context) throws " + Constant.SERVICEFRAMEEXCEPTION_CLASS_NAME + " {");
    sb.append (Constant.ICONVERT_CLASS_NAME + " convert = " + Constant.CONVERT_FACTORY_CLASS_NAME + ".getConvert(context.getGaeaRequest().getProtocol());");
    sb.append (Constant.REQUEST_PROTOCOL_CLASS_NAME + " request = (" + Constant.REQUEST_PROTOCOL_CLASS_NAME + ")context.getGaeaRequest().getProtocol().getSdpEntity();");
    sb.append ("java.util.List listKV = request.getParaKVList();");
    for (Method m : methodList) {
        if (m.getName ().equalsIgnoreCase (methodName)) {
            Class < ? > [] mType = m.getParameterTypes ();
            Type [] mGenericType = m.getGenericParameterTypes ();
            sb.append ("if(listKV.size() == " + mGenericType.length);
            for (int i = 0;
            i < mGenericType.length; i ++) {
                String paraName = mGenericType [i].toString ().replaceFirst ("class ", "");
                paraName = paraName.replaceAll ("java.util.", "").replaceAll ("java.lang.", "");
                if (paraName.startsWith (Constant.OUT_PARAM)) {
                    paraName = paraName.replaceAll (Constant.OUT_PARAM + "<", "");
                    paraName = paraName.substring (0, paraName.length () - 1);
                    paraName = paraName.replaceAll ("\\<.*\\>", "");
                }
                if (paraName.startsWith ("[")) {
                    paraName = mType [i].getCanonicalName ();
                }
                paraName = Util.getSimpleParaName (paraName);
                sb.append (" && (");
                sb.append ("((" + Constant.KEYVALUEPAIR_PROTOCOL_CLASS_NAME + ")listKV.get(");
                sb.append (i);
                sb.append (")).getKey().toString().equalsIgnoreCase(\"");
                sb.append (paraName);
                sb.append ("\")");
                if (paraName.indexOf ("int") >= 0) {
                    sb.append ("|| ((" + Constant.KEYVALUEPAIR_PROTOCOL_CLASS_NAME + ")listKV.get(");
                    sb.append (i);
                    sb.append (")).getKey().toString().equalsIgnoreCase(\"" + paraName.replaceAll ("int", "Integer") + "\")");
                } else if (paraName.indexOf ("Integer") >= 0) {
                    sb.append ("|| ((" + Constant.KEYVALUEPAIR_PROTOCOL_CLASS_NAME + ")listKV.get(");
                    sb.append (i);
                    sb.append (")).getKey().toString().equalsIgnoreCase(\"" + paraName.replaceAll ("Integer", "int") + "\")");
                } else if (paraName.indexOf ("char") >= 0) {
                    sb.append ("|| ((" + Constant.KEYVALUEPAIR_PROTOCOL_CLASS_NAME + ")listKV.get(");
                    sb.append (i);
                    sb.append (")).getKey().toString().equalsIgnoreCase(\"" + paraName.replaceAll ("char", "Character") + "\")");
                } else if (paraName.indexOf ("Character") >= 0) {
                    sb.append ("|| ((" + Constant.KEYVALUEPAIR_PROTOCOL_CLASS_NAME + ")listKV.get(");
                    sb.append (i);
                    sb.append (")).getKey().toString().equalsIgnoreCase(\"" + paraName.replaceAll ("Character", "char") + "\")");
                }

                sb.append (")");
            }
            sb.append ("){");
            sb.append ("java.util.List listOutPara = new java.util.ArrayList();");
            for (int i = 0;
            i < mGenericType.length; i ++) {
                String paraName = mGenericType [i].toString ().replaceFirst ("class ", "");
                boolean isOutPara = false;
                if (paraName.startsWith (Constant.OUT_PARAM)) {
                    isOutPara = true;
                }
                if (paraName.startsWith ("[")) {
                    paraName = mType [i].getCanonicalName ();
                }
                if (isOutPara) {
                    sb.append (Constant.OUT_PARAM + " arg" + i);
                    sb.append ("= new " + Constant.OUT_PARAM);
                    sb.append ("();");
                } else {
                    sb.append (paraName.replaceAll ("\\<.*\\>", ""));
                    sb.append (" arg" + i);
                }
                if (! isOutPara) {
                    paraName = paraName.replaceAll ("java.util.", "").replaceAll ("java.lang.", "");
                    if (paraName.equals ("long")) {
                        sb.append (" = 0L;");
                    } else if (paraName.equals ("float")) {
                        sb.append (" = 0F;");
                    } else if (paraName.equals ("double")) {
                        sb.append (" = 0D;");
                    } else if (paraName.equals ("int")) {
                        sb.append (" = 0;");
                    } else if (paraName.equals ("short")) {
                        sb.append (" = (short)0;");
                    } else if (paraName.equals ("byte")) {
                        sb.append (" = (byte)0;");
                    } else if (paraName.equals ("boolean")) {
                        sb.append (" = false;");
                    } else if (paraName.equals ("char")) {
                        sb.append (" = (char)'\\0';");
                    } else if (paraName.equals ("Long")) {
                        sb.append (" = new Long(\"0\");");
                    } else if (paraName.equals ("Float")) {
                        sb.append (" = new Float(\"0\");");
                    } else if (paraName.equals ("Double")) {
                        sb.append (" = new Double(\"0\");");
                    } else if (paraName.equals ("Integer")) {
                        sb.append (" = new Integer(\"0\");");
                    } else if (paraName.equals ("Short")) {
                        sb.append (" = new Short(\"0\");");
                    } else if (paraName.equals ("Byte")) {
                        sb.append (" = new Byte(\"0\");");
                    } else if (paraName.equals ("Boolean")) {
                        sb.append (" = new Boolean(\"false\");");
                    } else if (paraName.equals ("Character")) {
                        sb.append (" = new Character((char)'\\0');");
                    } else {
                        sb.append (" = null;");
                    }

                }
                if (isOutPara) {
                    sb.append ("listOutPara.add(arg" + i + ");");
                }
            }
            if (mGenericType.length > 0) {
                sb.append ("try {");
            }
            for (int i = 0;
            i < mGenericType.length; i ++) {
                String paraName = mGenericType [i].toString ().replaceFirst ("class ", "");
                boolean isOutPara = false;
                if (paraName.startsWith (Constant.OUT_PARAM)) {
                    isOutPara = true;
                }
                if (paraName.startsWith ("[")) {
                    paraName = mType [i].getCanonicalName ();
                }
                String pn = paraName.replaceAll ("java.util.", "").replaceAll ("java.lang.", "");
                if (! isOutPara) {
                    if (pn.equalsIgnoreCase ("String") || pn.equalsIgnoreCase ("int") || pn.equalsIgnoreCase ("Integer") || pn.equalsIgnoreCase ("long") || pn.equalsIgnoreCase ("short") || pn.equalsIgnoreCase ("float") || pn.equalsIgnoreCase ("boolean") || pn.equalsIgnoreCase ("double") || pn.equalsIgnoreCase ("char") || pn.equalsIgnoreCase ("Character") || pn.equalsIgnoreCase ("byte")) {
                        sb.append ("arg" + i);
                        sb.append (" = convert.convertTo" + pn + "(((" + Constant.KEYVALUEPAIR_PROTOCOL_CLASS_NAME + ")listKV.get(" + i + ")).getValue());");
                    } else {
                        sb.append ("arg" + i);
                        sb.append (" = (" + paraName.replaceAll ("\\<.*\\>", "") + ")convert.convertToT(((" + Constant.KEYVALUEPAIR_PROTOCOL_CLASS_NAME + ")listKV.get(" + i + ")).getValue(), ");
                        sb.append (paraName.replaceAll ("<.*?>", "") + ".class");
                        if (paraName.indexOf ("java.util.List") >= 0 || paraName.indexOf ("java.util.ArrayList") >= 0 || paraName.indexOf ("java.util.Vector") >= 0 || paraName.indexOf ("java.util.Set") >= 0 || paraName.indexOf ("java.util.HashSet") >= 0) {
                            sb.append (", ");
                            sb.append (paraName.replaceAll ("java.util.List<", "").replaceAll ("java.util.ArrayList<", "").replaceAll ("java.util.Vector<", "").replaceAll ("java.util.Set<", "").replaceAll ("java.util.HashSet<", "").replaceAll (">", ""));
                            sb.append (".class");
                        }
                        sb.append (");");
                    }
                } else {
                    String outType = paraName.replaceAll (Constant.OUT_PARAM + "<", "");
                    outType = outType.substring (0, outType.length () - 1);
                    String outpn = outType.replaceAll ("java.util.", "").replaceAll ("java.lang.", "");
                    if (outpn.equalsIgnoreCase ("String") || outpn.equalsIgnoreCase ("Integer") || outpn.equalsIgnoreCase ("Long") || outpn.equalsIgnoreCase ("Short") || outpn.equalsIgnoreCase ("Float") || outpn.equalsIgnoreCase ("Boolean") || outpn.equalsIgnoreCase ("Double") || outpn.equalsIgnoreCase ("Character") || outpn.equalsIgnoreCase ("Byte")) {
                        sb.append ("arg" + i);
                        sb.append (".setOutPara(convert.convertTo" + outpn + "(((" + Constant.KEYVALUEPAIR_PROTOCOL_CLASS_NAME + ")listKV.get(" + i + ")).getValue()));");
                    } else {
                        sb.append ("arg" + i);
                        sb.append (".setOutPara((" + outType + ")convert.convertToT(((" + Constant.KEYVALUEPAIR_PROTOCOL_CLASS_NAME + ")listKV.get(" + i + ")).getValue(), " + outType + ".class");
                        if (outType.indexOf ("java.util.List") >= 0 || outType.indexOf ("java.util.ArrayList") >= 0 || outType.indexOf ("java.util.Vector") >= 0 || outType.indexOf ("java.util.Set") >= 0 || outType.indexOf ("java.util.HashSet") >= 0) {
                            sb.append (", ");
                            sb.append (outType.replaceAll ("java.util.List<", "").replaceAll ("java.util.ArrayList<", "").replaceAll ("java.util.Vector<", "").replaceAll ("java.util.Set<", "").replaceAll ("java.util.HashSet<", "").replaceAll (">", ""));
                            sb.append (".class");
                        }
                        sb.append ("));");
                    }
                }
            }
            if (mGenericType.length > 0) {
                sb.append ("} catch (Exception e) {");
                sb.append ("throw new " + Constant.SERVICEFRAMEEXCEPTION_CLASS_NAME + "(\"method:" + className + "." + methodName + "--msg:parse gaeaRequest error\", context.getChannel().getRemoteIP(), context.getChannel().getLocalIP(), context.getGaeaRequest().getProtocol().getSdpEntity(), " + Constant.ERRORSTATE_CLASS_NAME + ".ParaException, e);");
                sb.append ("}");
            }
            Class < ? > classReturn = m.getReturnType ();
            Type typeReturn = m.getGenericReturnType ();
            String returnValueType = typeReturn.toString ().replaceFirst ("class ", "");
            if (returnValueType.startsWith ("[")) {
                returnValueType = classReturn.getCanonicalName ();
            }
            sb.append ("try {");
            if (! returnValueType.equalsIgnoreCase ("void")) {
                sb.append (returnValueType.replaceAll ("\\<.*\\>", "") + " returnValue = ");
            }
            sb.append ("serviceProxy.");
            sb.append (m.getName ());
            sb.append ("(");
            for (int i = 0;
            i < mGenericType.length; i ++) {
                sb.append ("arg");
                sb.append (i);
                if (i != mGenericType.length - 1) {
                    sb.append (", ");
                }
            }
            sb.append (");");
            if (! returnValueType.equalsIgnoreCase ("void")) {
                sb.append ("return new " + Constant.GAEARESPONSE_CLASS_NAME + "(returnValue");
            } else {
                sb.append ("return new " + Constant.GAEARESPONSE_CLASS_NAME + "(null");
            }
            sb.append (", listOutPara);");
            sb.append ("} catch (Exception e) {");
            sb.append ("throw new " + Constant.SERVICEFRAMEEXCEPTION_CLASS_NAME + "(\"method:" + className + "." + methodName + "--msg:invoke real service error\", context.getChannel().getRemoteIP(), context.getChannel().getLocalIP(), context.getGaeaRequest().getProtocol().getSdpEntity(), " + Constant.ERRORSTATE_CLASS_NAME + ".ServiceException, e);");
            sb.append ("}");
            sb.append ("}");
        }
    }
    sb.append ("throw new " + Constant.SERVICEFRAMEEXCEPTION_CLASS_NAME + "(\"method:" + className + "." + methodName + "--msg:not fond method error\", context.getChannel().getRemoteIP(), context.getChannel().getLocalIP(), context.getGaeaRequest().getProtocol().getSdpEntity(), " + Constant.ERRORSTATE_CLASS_NAME + ".NotFoundMethodException, null);");
    sb.append ("}");
    return sb.toString ();
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/RSAHelper.java" startline="59" endline="61">
public static RSAHelper getInstance () throws Exception {
    return new RSAHelper ();
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/RSAHelper.java" startline="70" endline="72">
public static RSAHelper getInstance (String pubModulus, String pubExponent) throws Exception {
    return new RSAHelper (pubModulus, pubExponent);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/RSAHelper.java" startline="142" endline="144">
public byte [] encryptByPublicKey (byte [] source) throws Exception {
    return pubEncryptCipher.doFinal (source);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/RSAHelper.java" startline="154" endline="156">
public byte [] decryptByPublicKey (byte [] dest) throws Exception {
    return pubDecryptCipher.doFinal (dest);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/RSAHelper.java" startline="166" endline="171">
public byte [] encryptByPrivateKey (byte [] source) throws Exception {
    if (priEncryptCipher == null) {
        throw new Exception ("私钥不存在,加密失败");
    }
    return priEncryptCipher.doFinal (source);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/RSAHelper.java" startline="181" endline="186">
public byte [] decryptByPrivateKey (byte [] dest) throws Exception {
    if (priDecryptCipher == null) {
        throw new Exception ("私钥不存在,解密失败");
    }
    return priDecryptCipher.doFinal (dest);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/RSAHelper.java" startline="189" endline="191">
public String getPubModulus () {
    return pubModulus;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/RSAHelper.java" startline="193" endline="195">
public String getPubExponent () {
    return pubExponent;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/DESHelper.java" startline="46" endline="48">
public static DESHelper getInstance (String key) throws Exception {
    return new DESHelper (key);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/DESHelper.java" startline="87" endline="89">
public byte [] encrypt (byte [] src) throws Exception {
    return encryptCipher.doFinal (src);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/secure/com/bj58/spat/gaea/server/secure/DESHelper.java" startline="97" endline="99">
public byte [] decrypt (byte [] dest) throws Exception {
    return decryptCipher.doFinal (dest);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/Command.java" startline="111" endline="125">
public static Command create (String command) {
    Command entity = null;
    command = command.trim ();
    for (ICommandHelper cc : helperList) {
        entity = cc.createCommand (command);
        if (entity != null) {
            break;
        }
    }
    if (entity == null) {
        entity = new Command ();
        entity.setCommandType (CommandType.Illegal);
    }
    return entity;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/Command.java" startline="133" endline="137">
public void exec (MessageEvent event) throws Exception {
    for (ICommandHelper cc : helperList) {
        cc.execCommand (this, event);
    }
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/Command.java" startline="177" endline="179">
public CommandType getCommandType () {
    return commandType;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/Command.java" startline="185" endline="187">
public String getCommand () {
    return command;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/Command.java" startline="193" endline="195">
public List < ShowColumn > getColumnList () {
    return columnList;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/Command.java" startline="201" endline="203">
public List < String > getGrep () {
    return grep;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/Command.java" startline="213" endline="215">
public int getGroup () {
    return group;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/Command.java" startline="217" endline="219">
public int getSecond () {
    return second;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/Command.java" startline="225" endline="227">
public String getMethod () {
    return method;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/commandhelper/Count.java" startline="49" endline="70">
public Command createCommand (String commandStr) {
    if (commandStr != null && ! commandStr.equalsIgnoreCase ("")) {
        String [] args = commandStr.split ("\\|");
        if (args [0].trim ().equalsIgnoreCase ("count")) {
            Command entity = new Command ();
            entity.setCommandType (CommandType.Count);
            entity.setSecond (1);
            entity.setMethod ("#all#");
            if (args.length > 1) {
                for (int i = 1;
                i < args.length; i ++) {
                    if (args [i].trim ().startsWith ("second")) {
                        entity.setSecond (Integer.parseInt (args [i].trim ().replaceFirst ("second ", "").trim ()));
                    } else if (args [i].trim ().startsWith ("method")) {
                        entity.setMethod (args [i].trim ().replaceFirst ("method ", "").trim ());
                    }

                }
            }
            return entity;
        }
    }
    return null;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/commandhelper/Time.java" startline="50" endline="99">
public Command createCommand (String commandStr) {
    if (commandStr != null && ! commandStr.equalsIgnoreCase ("")) {
        String [] args = commandStr.split ("\\|");
        if (args [0].trim ().equalsIgnoreCase ("time")) {
            List < String > grepList = new ArrayList < String > ();
            List < ShowColumn > scList = new ArrayList < ShowColumn > ();
            Command entity = new Command ();
            scList.add (ShowColumn.All);
            entity.setCommandType (CommandType.Time);
            for (int i = 1;
            i < args.length; i ++) {
                if (args [i].trim ().startsWith ("grep")) {
                    grepList.add (args [i].trim ().replaceFirst ("grep ", "").trim ());
                } else if (args [i].trim ().startsWith ("group")) {
                    entity.setGroup (Integer.parseInt (args [i].trim ().replaceFirst ("group ", "").trim ()));
                } else if (args [i].trim ().startsWith ("column")) {
                    scList.clear ();
                    String cs = args [i].trim ().replaceFirst ("column -", "");
                    if (cs.indexOf ("a") >= 0) {
                        if (! scList.contains (ShowColumn.All)) {
                            scList.add (ShowColumn.All);
                        }
                    } else {
                        String [] csAry = cs.split ("");
                        for (String item : csAry) {
                            if (item.equalsIgnoreCase ("t")) {
                                if (! scList.contains (ShowColumn.Time)) {
                                    scList.add (ShowColumn.Time);
                                }
                            } else if (item.equalsIgnoreCase ("k")) {
                                if (! scList.contains (ShowColumn.Key)) {
                                    scList.add (ShowColumn.Key);
                                }
                            } else if (item.equalsIgnoreCase ("d")) {
                                if (! scList.contains (ShowColumn.Description)) {
                                    scList.add (ShowColumn.Description);
                                }
                            }

                        }
                    }
                }

            }
            entity.setGrep (grepList);
            entity.setColumnList (scList);
            return entity;
        }
    }
    return null;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/server/src/performance/com/bj58/spat/gaea/server/performance/commandhelper/Exec.java" startline="43" endline="61">
public Command createCommand (String commandStr) {
    if (commandStr != null && ! commandStr.equalsIgnoreCase ("")) {
        String [] args = commandStr.split ("\\|");
        if (args [0].trim ().equalsIgnoreCase ("exec")) {
            String execStr = commandStr.replaceFirst ("exec\\|", "");
            if (execStr.startsWith ("netstat") || execStr.startsWith ("top")) {
                Command entity = new Command ();
                entity.setCommandType (CommandType.Exec);
                if (execStr.equalsIgnoreCase ("top")) {
                    entity.setCommand ("top -bn 1");
                } else if (execStr.equalsIgnoreCase ("netstat")) {
                    entity.setCommand (execStr);
                }

                return entity;
            }
        }
    }
    return null;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/protocol/src/main/java/com/bj58/spat/gaea/protocol/utility/ProtocolHelper.java" startline="45" endline="54">
public static Object fromBytes (byte [] buffer) throws Exception {
    if (buffer != null && buffer.length > 0) {
        int version = buffer [0];
        if (version == com.bj58.spat.gaea.protocol.sfp.v1.Protocol.VERSION) {
            return com.bj58.spat.gaea.protocol.sfp.v1.Protocol.fromBytes (buffer);
        }
    }
    throw new Exception ("不完整的二进制流");
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/protocol/src/main/java/com/bj58/spat/gaea/protocol/utility/ByteConverter.java" startline="35" endline="40">
public static int bytesToIntLittleEndian (byte buf []) {
    return buf [0] & 0xff | ((buf [1] << 8) & 0xff00) | ((buf [2] << 16) & 0xff0000) | ((buf [3] << 24) & 0xff000000);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/protocol/src/main/java/com/bj58/spat/gaea/protocol/utility/ByteConverter.java" startline="47" endline="54">
public static byte [] intToBytesLittleEndian (int n) {
    byte [] buf = new byte [4];
    buf [0] = (byte) (0xff & n);
    buf [1] = (byte) ((0xff00 & n)>> 8);
    buf [2] = (byte) ((0xff0000 & n)>> 16);
    buf [3] = (byte) ((0xff000000 & n)>> 24);
    return buf;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/protocol/src/main/java/com/bj58/spat/gaea/protocol/utility/ByteConverter.java" startline="83" endline="88">
public static int bytesToIntLittleEndian (byte buf [], int offset) {
    return buf [offset] & 0xff | ((buf [offset + 1] << 8) & 0xff00) | ((buf [offset + 2] << 16) & 0xff0000) | ((buf [offset + 3] << 24) & 0xff000000);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/client/java/client/src/com/bj58/spat/gaea/client/utility/AutoResetEvent.java" startline="40" endline="42">
public void set () {
    cdl.countDown ();
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/client/java/client/src/com/bj58/spat/gaea/client/utility/AutoResetEvent.java" startline="44" endline="46">
public boolean waitOne (long time) throws InterruptedException {
    return cdl.await (time, TimeUnit.MILLISECONDS);
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/client/java/client/src/com/bj58/spat/gaea/client/utility/helper/TimeSpanHelper.java" startline="30" endline="39">
public static int getIntFromTimeSpan (String timeSpan) {
    int returnint = 0;
    String [] times = timeSpan.split (":");
    if (times.length == 3) {
        returnint += Integer.parseInt (times [0]) * 60 * 60 * 1000;
        returnint += Integer.parseInt (times [1]) * 60 * 1000;
        returnint += Integer.parseInt (times [2]) * 1000;
    }
    return returnint;
}
</source>
<source file="projects/systems/58code_Gaea/Gaea/client/java/client/src/com/bj58/spat/gaea/client/utility/helper/TimeSpanHelper.java" startline="41" endline="43">
public static String getTimeSpanFromInt (int timeSpan) throws Exception {
    throw new Exception ("NotImplementedException");
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/socialfs/SocialFS.java" startline="73" endline="117">
public void login (String password) throws CredentialsNotFoundException {
    System.out.println ("searching credentials with password " + password);
    if (cred != null) throw new IllegalStateException ("already logged in !");

    Key credKey = keyFactory.create (password, username);
    MessageDigest md = passwordDigestProvider.get ();
    md.update (password.getBytes ());
    SecretKey credSecretKey = new SecretKeySpec (md.digest (), credentialsEncryptionAlgorithm);
    for (Chunk c : chunkeeper.findChunk (credKey)) {
        try {
            Serializable s = c.download ();
            if (! s.getClass ().equals (EncryptedObject.class)) continue;

            @SuppressWarnings ("unchecked")
            EncryptedObject < Credentials > encCred = (EncryptedObject < Credentials >) s;
            cred = encCred.decrypt (credSecretKey).setCredentialsKey (credSecretKey);
        } catch (Exception e) {
            e.printStackTrace ();
        }
    }
    if (cred == null) throw new CredentialsNotFoundException ();

    System.out.println ("found credentials: " + cred.getCredentialsKey ());
    cred.getProfile ().setTransientParams (stash, fileCache, uidFactory);
    fileFactory.login (cred);
    stash.login (cred.getGroupsMasterKey ());
    reinsertProfileTaskProvider.get ().setCredentials (cred).register ();
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/socialfs/SocialFS.java" startline="119" endline="121">
public Credentials getCredentials () {
    return cred;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/socialfs/SocialFS.java" startline="123" endline="149">
public Profile findProfile (UserID uid) throws ProfileNotFoundException {
    if (cred.getProfile ().getUserId ().equals (uid)) return cred.getProfile ();

    Key k = uid.getKey ();
    Profile cachedProfile = profileCache.search (k);
    if (cachedProfile != null) return cachedProfile;

    List < Serializable > profiles = profileDHT.get (k);
    for (Serializable s : profiles) {
        if (! (s instanceof Profile)) continue;

        Profile p = ((Profile) s).setTransientParams (stash, fileCache, uidFactory);
        if (p.getUserId ().equals (uid)) {
            profileCache.insert (p);
            return p;
        }
    }
    throw new ProfileNotFoundException ();
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/socialfs/SocialFS.java" startline="151" endline="153">
public SFSFileFactory getSFSFileFactory () {
    return fileFactory;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/socialfs/SocialFS.java" startline="155" endline="157">
public Stash getStash () {
    return stash;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/socialfs/SocialFS.java" startline="160" endline="171">
private String __toString (String prefix, SFSFile f) throws Exception {
    prefix += f.getName ();
    int i = 0;
    String $ = "";
    do {
        try {
            $ += __toString (prefix + "/", f.getSubFiles (i ++));
        } catch (FileNotFoundException e) {
            return i == 1 ? prefix + "\n" : prefix + "/\n" + $;
        }
    } while (true);
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/server/jsonDataHandlers/InboxFetcher.java" startline="78" endline="121">
public EWolfResponse handleData (JsonElement jsonReq) {
    Gson gson = new Gson ();
    JsonReqInboxParams jsonReqParams;
    try {
        jsonReqParams = gson.fromJson (jsonReq, JsonReqInboxParams.class);
    } catch (Exception e) {
        return new InboxResponse (RES_BAD_REQUEST);
    }
    List < InboxMessage > lst = new ArrayList < InboxMessage > ();
    List < SocialMessage > messages = inboxCache.get ();
    for (SocialMessage m : messages) {
        if (m.getClass () != ContentMessage.class) {
            continue;
        }
        InboxMessage msg = new InboxMessage ();
        try {
            Profile sender = m.getSender ();
            msg.senderID = sender.getUserId ().toString ();
            msg.senderName = sender.getName ();
        } catch (ProfileNotFoundException e) {
            msg.senderID = SENDER_NOT_FOUND_MESSAGE;
            msg.senderName = SENDER_NOT_FOUND_MESSAGE;
            e.printStackTrace ();
        }
        msg.timestamp = m.getTimestamp ();
        if (jsonReqParams.isMatchCriteria (msg)) {
            msg.mail = ((ContentMessage) m).getMessage ();
            lst.add (msg);
        }
    }
    Collections.sort (lst);
    if (jsonReqParams.maxMessages != null && lst.size () > jsonReqParams.maxMessages) {
        lst = lst.subList (0, jsonReqParams.maxMessages);
    }
    return new InboxResponse (lst);
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/server/jsonDataHandlers/WolfpackMembersFetcher.java" startline="60" endline="91">
public EWolfResponse handleData (JsonElement jsonReq) {
    Gson gson = new Gson ();
    JsonReqWolfpackMembersParams jsonReqParams;
    try {
        jsonReqParams = gson.fromJson (jsonReq, JsonReqWolfpackMembersParams.class);
    } catch (Exception e) {
        e.printStackTrace ();
        return new WolfpackMembersResponse (RES_BAD_REQUEST);
    }
    Map < String, List < Profile > > wolfpacksMembersMap = wolfpacksMembersCache.get ();
    Set < Profile > profiles = new HashSet < Profile > ();
    if (jsonReqParams.wolfpackName == null) {
        for (Map.Entry < String, List < Profile > > entry : wolfpacksMembersMap.entrySet ()) {
            profiles.addAll (entry.getValue ());
        }
    } else {
        List < Profile > wMembers = wolfpacksMembersMap.get (jsonReqParams.wolfpackName);
        if (wMembers != null) {
            profiles.addAll (wMembers);
        } else {
            return new WolfpackMembersResponse (RES_NOT_FOUND);
        }
    }
    List < ProfileData > resList = new ArrayList < ProfileData > ();
    for (Profile profile : profiles) {
        resList.add (new ProfileData (profile.getName (), profile.getUserId ().toString ()));
    }
    return new WolfpackMembersResponse (resList);
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/EncryptedObject.java" startline="31" endline="33">
public byte [] getBytes () {
    return bytes;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/EncryptedObject.java" startline="35" endline="74">
public EncryptedObject < T > encrypt (T obj, Key key) throws EncryptionException {
    ByteArrayOutputStream bout = null;
    ObjectOutputStream oout = null;
    Cipher cipher;
    try {
        cipher = Cipher.getInstance (key.getAlgorithm ());
        cipher.init (Cipher.ENCRYPT_MODE, key);
    } catch (Exception e) {
        e.printStackTrace ();
        throw new EncryptionException (e);
    }
    try {
        bout = new ByteArrayOutputStream ();
        oout = new ObjectOutputStream (bout);
        oout.writeObject (obj);
    } catch (IOException e) {
        throw new AssertionError (e);
    } finally {
        try {
            oout.close ();
        } catch (Exception e) {
        }
        try {
            bout.close ();
        } catch (Exception e) {
        }
    }
    try {
        bytes = cipher.doFinal (bout.toByteArray ());
    } catch (IllegalBlockSizeException e) {
        e.printStackTrace ();
        throw new AssertionError ("wrong encryption algorithm: " + e.getMessage ());
    } catch (BadPaddingException e) {
        e.printStackTrace ();
        throw new AssertionError ("wrong encryption algorithm: " + e.getMessage ());
    }
    return this;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/EncryptedObject.java" startline="77" endline="103">
public T decrypt (Key key) throws IOException, InvalidKeyException, ClassNotFoundException {
    Cipher cipher;
    try {
        cipher = Cipher.getInstance (key.getAlgorithm ());
    } catch (Exception e) {
        e.printStackTrace ();
        throw new RuntimeException (e.getMessage ());
    }
    cipher.init (Cipher.DECRYPT_MODE, key);
    InputStream bin = null;
    CipherInputStream cin = null;
    ObjectInputStream oin = null;
    try {
        bin = new ByteArrayInputStream (bytes);
        cin = new CipherInputStream (bin, cipher);
        oin = new ObjectInputStream (cin);
        return (T) oin.readObject ();
    } finally {
        try {
            oin.close ();
        } catch (Exception e) {
        }
        try {
            cin.close ();
        } catch (Exception e) {
        }
        try {
            bin.close ();
        } catch (Exception e) {
        }
    }
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/Signable.java" startline="40" endline="42">
public PrivateKey getPrvSigKey () {
    return prvSigKey;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/Signable.java" startline="44" endline="47">
public Signable setPubSigKey (PublicKey pubSigKey) {
    this.pubSigKey = pubSigKey;
    return this;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/Signable.java" startline="49" endline="51">
public PublicKey getPubSigKey () {
    return pubSigKey;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/Signable.java" startline="53" endline="56">
public Signable setPrvSigKey (PrivateKey privSigKey) {
    this.prvSigKey = privSigKey;
    return this;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/Signable.java" startline="58" endline="83">
private void writeObject (ObjectOutputStream out) throws IOException, SignatureException, NoSuchAlgorithmException, InvalidKeyException {
    if (signature != null) {
        out.defaultWriteObject ();
        return;
    }
    if (pubSigKey == null || prvSigKey == null) throw new NotSerializableException ("missing sig keys");

    Signature s = Signature.getInstance (prvSigKey.getAlgorithm ());
    s.initSign (prvSigKey);
    s.update (pubSigKey.getEncoded ());
    updateSignature (s);
    signature = s.sign ();
    out.defaultWriteObject ();
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/Signable.java" startline="87" endline="101">
private void readObject (ObjectInputStream in) throws IOException, ClassNotFoundException {
    in.registerValidation (new ObjectInputValidation () {
        @Override
        public void validateObject () throws InvalidObjectException {
            try {
                Signable.this.verifySignature ();
            } catch (Exception e) {
                throw new InvalidObjectException (e.getMessage ());
            }
        }}

    , 0);
    in.defaultReadObject ();
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/Signable.java" startline="91" endline="97">
public void validateObject () throws InvalidObjectException {
    try {
        Signable.this.verifySignature ();
    } catch (Exception e) {
        throw new InvalidObjectException (e.getMessage ());
    }
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/crypto/Signable.java" startline="123" endline="125">
byte [] getSignature () {
    return signature;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/Stash.java" startline="50" endline="52">
public void login (SecretKey groupMasterKey) {
    this.groupMasterKey = groupMasterKey;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/Stash.java" startline="54" endline="56">
public void put (Key key, Serializable obj, Group group) {
    chunkeeper.store (key, group.encrypt (obj));
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/Stash.java" startline="58" endline="69">
public List < LazyChunkDecryptor > get (Key key) {
    Set < Chunk > chunks = chunkeeper.findChunk (key);
    List < LazyChunkDecryptor > $ = new ArrayList < LazyChunkDecryptor > ();
    for (final Chunk c : chunks) {
        lazyChunkDecryptorProvider.get ().setChunk (c).addTo ($);
    }
    return $;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/Stash.java" startline="72" endline="76">
public Group createGroup () {
    Group g = groupProvider.get ();
    addGroup (g);
    return g;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/Stash.java" startline="79" endline="111">
public List < Group > getAllGroups () {
    List < Group > $ = new ArrayList < Group > ();
    for (int i = 0;
    ; ++ i) {
        Key groupKey = keyFactory.create (Base64.encodeBase64String (groupMasterKey.getEncoded ()), "groups", Integer.toString (i));
        Set < Chunk > chnuks = chunkeeper.findChunk (groupKey);
        List < Group > g = new ArrayList < Group > ();
        for (Chunk c : chnuks) {
            try {
                @SuppressWarnings ("unchecked")
                EncryptedObject < Group > encGroup = (EncryptedObject < Group >) c.download ();
                g.add (encGroup.decrypt (groupMasterKey));
            } catch (Exception e) {
                e.printStackTrace ();
            }
        }
        $.addAll (g);
        if (g.isEmpty ()) {
            return $;
        }
    }
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/stash/Stash.java" startline="113" endline="131">
public void addGroup (Group g) {
    if (g.getGroupId () == null || g.getGroupSecretKey () == null) throw new IllegalArgumentException ("group is incomplete");

    try {
        getGroupFromId (g.getGroupId ());
        return;
    } catch (GroupNotFoundException e1) {
    }
    int nrGroups = getAllGroups ().size ();
    Key newGroupKey = keyFactory.create (Base64.encodeBase64String (groupMasterKey.getEncoded ()), "groups", Integer.toString (nrGroups));
    chunkeeper.store (newGroupKey, new EncryptedObject < Group > ().encrypt (g, groupMasterKey));
    groupsCache.put (g.getGroupId (), g);
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/http/HttpConnector.java" startline="131" endline="137">
public void shutdown () {
    try {
        srvScok.get ().close ();
    } catch (IOException e) {
        throw new RuntimeException (e);
    }
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/http/HttpConnector.java" startline="156" endline="186">
public HttpResponse send (Node to, HttpRequest req) throws IOException {
    HttpHost host = new HttpHost (to.getInetAddress ().getHostAddress (), to.getPort (scheme));
    HttpContext context = httpContextProvider.get ();
    context.setAttribute (ExecutionContext.HTTP_TARGET_HOST, host);
    DefaultHttpClientConnection conn = connProvider.get ();
    context.setAttribute (ExecutionContext.HTTP_CONNECTION, conn);
    Socket socket = new Socket (host.getHostName (), host.getPort ());
    HttpResponse response = null;
    try {
        conn.bind (socket, clientParams);
        req.setParams (clientParams);
        clientExecutor.preProcess (req, clientProcessor, context);
        response = clientExecutor.execute (req, conn, context);
        response.setParams (clientParams);
        clientExecutor.postProcess (response, clientProcessor, context);
        if (response.getEntity () != null) {
            ByteArrayEntity entity = new ByteArrayEntity (EntityUtils.toByteArray (response.getEntity ()));
            response.setEntity (entity);
        }
    } catch (HttpException e) {
        throw new IOException (e);
    } finally {
        conn.close ();
    }
    return response;
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/chunkeeper/ChunKeeper.java" startline="58" endline="62">
public void bind () {
    for (AbstractHandler h : handlers) {
        h.register (connector);
    }
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/chunkeeper/ChunKeeper.java" startline="78" endline="93">
public void store (Key key, Serializable data) {
    ByteArrayOutputStream bout = null;
    ObjectOutputStream oout = null;
    try {
        bout = new ByteArrayOutputStream ();
        oout = new ObjectOutputStream (bout);
        oout.writeObject (data);
        oout.flush ();
        chunkStore.store (key, bout.toByteArray ());
    } catch (Exception e) {
        throw new RuntimeException ("could not serialize chunk", e);
    } finally {
        try {
            bout.close ();
        } catch (Exception e) {
        }
        try {
            oout.close ();
        } catch (Exception e) {
        }
    }
}
</source>
<source file="projects/systems/236371_ewolf-webgui/ewolf-webgui/src/il/technion/ewolf/chunkeeper/ChunKeeper.java" startline="100" endline="128">
public Set < Chunk > findChunk (Key key) {
    Chunk localResults = chunkStore.get (key);
    if (localResults != null) {
        return Collections.singleton (localResults);
    }
    List < Serializable > searchResults = chucksDHT.get (key);
    Set < Chunk > $ = new HashSet < Chunk > ();
    for (Serializable s : searchResults) {
        if (! ChunkLocator.class.equals (s.getClass ())) continue;

        ChunkLocator locator = (ChunkLocator) s;
        boolean wasAdded = false;
        for (Chunk c : $) {
            if (c.addLocator (locator)) {
                wasAdded = true;
                break;
            }
        }
        if (! wasAdded) {
            Chunk c = chunkProvider.get ();
            c.addLocator (locator);
            $.add (c);
        }
    }
    return $;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/DynamicPresentationModel.java" startline="141" endline="144">
public StateModel getStateModel () {
    return stateModel;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/DynamicPresentationModel.java" startline="201" endline="206">
public void setMapBeanChangeHandler (DynamicPresentationModelMapBeanChangeHandler mapBeanChangeHandler) {
    mapChannel.removeValueChangeListener (this.mapBeanChangeHandler);
    this.mapBeanChangeHandler = mapBeanChangeHandler;
    mapChannel.addValueChangeListener (this.mapBeanChangeHandler);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/DefaultMapBeanChangeHandler.java" startline="20" endline="41">
public void propertyChange (PropertyChangeEvent evt) {
    if (evt.getNewValue () instanceof Map) {
        Map newMap = (Map) evt.getNewValue ();
        for (Entry < String, ValueModel > entry : dynamicPresentationModel.getNamesToValueModels ().entrySet ()) {
            String key = entry.getKey ();
            ValueModel valueModel = entry.getValue ();
            if (newMap.containsKey (key)) {
                valueModel.setValue (newMap.get (key));
            } else {
                newMap.put (key, valueModel.getValue ());
            }
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="28" endline="31">
public void add (int index, T element) {
    validateNotNull (getValue ()).add (index, element);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="34" endline="37">
public boolean add (T e) {
    return validateNotNull (getValue ()).add (e);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="40" endline="43">
public boolean addAll (Collection < ? extends T > c) {
    return validateNotNull (getValue ()).addAll (c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="46" endline="49">
public boolean addAll (int index, Collection < ? extends T > c) {
    return validateNotNull (getValue ()).addAll (index, c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="52" endline="55">
public void clear () {
    validateNotNull (getValue ()).clear ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="80" endline="84">
public boolean contains (Object o) {
    final ObservableList < T > value = getValue ();
    return (value == null) ? false : value.contains (o);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="87" endline="91">
public boolean containsAll (Collection < ? > c) {
    final ObservableList < T > value = getValue ();
    return (value == null) ? false : value.containsAll (c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="100" endline="103">
public void executeBatchAction (BatchAction action) {
    validateNotNull (getValue ()).executeBatchAction (action);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="106" endline="109">
public T get (int index) {
    return validateNotNull (getValue ()).get (index);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="118" endline="122">
public int indexOf (Object o) {
    final ObservableList < T > value = getValue ();
    return (value == null) ? - 1 : value.indexOf (o);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="125" endline="129">
public boolean isEmpty () {
    final ObservableList < T > value = getValue ();
    return (value == null) ? true : value.isEmpty ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="132" endline="136">
public Iterator < T > iterator () {
    final ObservableList < T > value = getValue ();
    return (value == null) ? Collections.EMPTY_LIST.iterator () : value.iterator ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="139" endline="143">
public int lastIndexOf (Object o) {
    final ObservableList < T > value = getValue ();
    return (value == null) ? - 1 : value.lastIndexOf (o);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="158" endline="161">
public T remove (int index) {
    return validateNotNull (getValue ()).remove (index);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="164" endline="167">
public boolean remove (Object o) {
    return validateNotNull (getValue ()).remove (o);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="170" endline="173">
public boolean removeAll (Collection < ? > c) {
    return validateNotNull (getValue ()).removeAll (c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="176" endline="179">
public boolean retainAll (Collection < ? > c) {
    return validateNotNull (getValue ()).retainAll (c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="182" endline="185">
public T set (int index, T element) {
    return validateNotNull (getValue ()).set (index, element);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="188" endline="192">
public int size () {
    final ObservableList < T > value = getValue ();
    return (value == null) ? 0 : value.size ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="201" endline="204">
public Object [] toArray () {
    return validateNotNull (getValue ()).toArray ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="207" endline="210">
public < AT > AT [] toArray (AT [] a) {
    return validateNotNull (getValue ()).toArray (a);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/value/IndexedCollectionValueModel.java" startline="223" endline="226">
public ImmutableList < CollectionChangeListener < T > > getCollectionChangeListeners () {
    return ImmutableList.copyOf (getSupport ().getCollectionChangeListeners ());
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/SimplePropertyAdapter.java" startline="27" endline="30">
public String getPropertyName () {
    return propertyName;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/SimplePropertyAdapter.java" startline="32" endline="35">
public PropertyDescriptor getPropertyDescriptor () {
    return getPropertyDescriptor (beanAdapter.getBean ());
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/SimplePropertyAdapter.java" startline="38" endline="51">
public Object getValue () {
    final PropertyDescriptor propertyDescriptor = getPropertyDescriptor ();
    Object bean = beanAdapter.getBean ();
    if (propertyDescriptor != null && bean != null) {
        return BeanUtils.getValue (bean, propertyDescriptor);
    } else {
        return null;
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/SimplePropertyAdapter.java" startline="54" endline="90">
public void setValue (Object newValue) {
    PropertyDescriptor propertyDescriptor = getPropertyDescriptor ();
    if (beanAdapter.getBean () == null) {
        try {
            Object newInstance = beanAdapter.getBeanClass ().newInstance ();
            beanAdapter.setBean (newInstance);
            propertyDescriptor = getPropertyDescriptor ();
        } catch (Exception e) {
            LOGGER.error (e, e);
        }
    }
    if (propertyDescriptor != null) {
        try {
            Object effectiveNewValue = newValue;
            if (effectiveNewValue == null && propertyDescriptor.getPropertyType ().isPrimitive ()) {
                effectiveNewValue = Defaults.defaultValue (propertyDescriptor.getPropertyType ());
            }
            BeanUtils.setValue (beanAdapter.getBean (), propertyDescriptor, effectiveNewValue);
        } catch (PropertyVetoException e) {
            LOGGER.trace (e.getMessage (), e);
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/SimplePropertyAdapter.java" startline="155" endline="168">
private PropertyDescriptor getPropertyDescriptor (Object bean) {
    try {
        Class < ? extends Object > beanClass = bean != null ? bean.getClass () : beanAdapter.getBeanClass ();
        return BeanUtils.getPropertyDescriptor (beanClass, propertyName);
    } catch (Exception e) {
        LOGGER.trace (e.getMessage (), e);
    }
    return null;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/support/SwingIdentityPropertyChangeSupport.java" startline="18" endline="42">
public void fireIdentityPropertyChange (final PropertyChangeEvent evt) {
    if (EventQueue.isDispatchThread ()) {
        super.fireIdentityPropertyChange (evt);
    } else {
        try {
            EventQueue.invokeAndWait (new Runnable () {
                @Override
                public void run () {
                    fireIdentityPropertyChange (evt);
                }}

            );
        } catch (Exception e) {
            LOGGER.error (e.getMessage (), e);
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/support/SwingIdentityPropertyChangeSupport.java" startline="31" endline="34">
public void run () {
    fireIdentityPropertyChange (evt);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/support/SwingIdentityPropertyChangeSupport.java" startline="45" endline="69">
public void firePropertyChange (final PropertyChangeEvent evt) {
    if (EventQueue.isDispatchThread ()) {
        super.firePropertyChange (evt);
    } else {
        try {
            EventQueue.invokeAndWait (new Runnable () {
                @Override
                public void run () {
                    firePropertyChange (evt);
                }}

            );
        } catch (Exception e) {
            LOGGER.error (e.getMessage (), e);
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/support/SwingIdentityPropertyChangeSupport.java" startline="58" endline="61">
public void run () {
    firePropertyChange (evt);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/support/IdentityPropertyChangeSupport.java" startline="18" endline="21">
public void fireIdentityPropertyChange (String propertyName, Object oldValue, Object newValue) {
    fireIdentityPropertyChange (new PropertyChangeEvent (source, propertyName, oldValue, newValue));
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/beans/support/IdentityPropertyChangeSupport.java" startline="23" endline="44">
public void fireIdentityPropertyChange (PropertyChangeEvent evt) {
    if (evt.getOldValue () == null || evt.getOldValue () != evt.getNewValue ()) {
        for (PropertyChangeListener listener : getPropertyChangeListeners ()) {
            if (listener instanceof PropertyChangeListenerProxy) {
                final PropertyChangeListenerProxy proxy = (PropertyChangeListenerProxy) listener;
                if (proxy.getPropertyName ().equals (evt.getPropertyName ())) {
                    proxy.propertyChange (evt);
                }
            } else {
                listener.propertyChange (evt);
            }
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/selection/SelectionHolder.java" startline="22" endline="25">
public SortedSet < Integer > getSelection () {
    return indexes != null ? new TreeSet < Integer > (indexes) : new TreeSet < Integer > ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/selection/SelectionHolder.java" startline="34" endline="44">
public void setSelectedItem (Object selection) {
    if (selection == null) {
        setSelection ();
    } else {
        setSelection (origin.indexOf (selection));
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/DynamicPresentationModelFactoryImpl.java" startline="8" endline="18">
public DynamicPresentationModel newDynamicPresentationModel (PresentationModel parentModel, String propertyName) {
    DynamicPresentationModel dynamicPresentationModel = new DynamicPresentationModel (parentModel.getChangeSupportFactory (), parentModel.getObservableCollectionSupportFactory (), parentModel.getValueModel (propertyName), Map.class);
    dynamicPresentationModel.setValueModelFactory (new DynamicPresentationModelValueModelFactoryImpl ());
    dynamicPresentationModel.setMapBeanChangeHandler (new DefaultMapBeanChangeHandler (dynamicPresentationModel));
    dynamicPresentationModel.setMappedValueChangeHandler (new DefaultMappedValueChangeHandler (dynamicPresentationModel));
    return dynamicPresentationModel;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/DefaultPresentationModel.java" startline="87" endline="90">
public Object getValue (String propertyName) {
    return getValueModel (propertyName).getValue ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/DefaultPresentationModel.java" startline="93" endline="108">
public ValueModel getValueModel (String propertyName) {
    ValueModel valueModel = null;
    int index = propertyName.lastIndexOf ('.');
    if (index == - 1) {
        valueModel = beanAdapter.getValueModel (propertyName);
    } else {
        valueModel = getSubModel (propertyName.substring (0, index)).getValueModel (propertyName.substring (index + 1, propertyName.length ()));
    }
    return valueModel;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/binding/DefaultPresentationModel.java" startline="142" endline="145">
public void setBean (Object newBean) {
    beanAdapter.setBean (newBean);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="48" endline="51">
protected CollectionChangeListener getUndoRedoManagerPushHandler () {
    return collectionChangeHandler;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="54" endline="57">
public void addCollectionChangeListener (CollectionChangeListener listener) {
    observableCollectionSupport.addCollectionChangeListener (listener);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="60" endline="63">
public void removeCollectionChangeListener (CollectionChangeListener listener) {
    observableCollectionSupport.removeCollectionChangeListener (listener);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="65" endline="82">
public void undo (CollectionChangeEvent event) {
    try {
        getValueModel ().removeCollectionChangeListener (this.collectionChangeHandler);
        getUndoRedoManager ().beginTransaction ();
        CollectionDifference difference = event.getDifference ();
        ObservableCollection source = getValueModel ();
        source.unapply (difference);
    } finally {
        getValueModel ().addCollectionChangeListener (this.collectionChangeHandler);
        getUndoRedoManager ().endTransaction ();
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="84" endline="105">
public void redo (CollectionChangeEvent event) {
    try {
        getValueModel ().removeCollectionChangeListener (this.collectionChangeHandler);
        getUndoRedoManager ().beginTransaction ();
        CollectionDifference difference = event.getDifference ();
        ObservableCollection source = getValueModel ();
        source.apply (difference);
    } finally {
        getValueModel ().addCollectionChangeListener (this.collectionChangeHandler);
        getUndoRedoManager ().endTransaction ();
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="108" endline="111">
public E get (int index) {
    return getValueModel ().get (index);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="114" endline="117">
public E set (int index, E newValue) {
    return getValueModel ().set (index, newValue);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="120" endline="123">
public boolean add (E e) {
    return getValueModel ().add (e);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="126" endline="129">
public boolean addAll (Collection c) {
    return getValueModel ().addAll (c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="132" endline="135">
public void clear () {
    getValueModel ().clear ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="138" endline="141">
public boolean contains (Object e) {
    return getValueModel ().contains (e);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="144" endline="147">
public boolean containsAll (Collection c) {
    return getValueModel ().containsAll (c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="150" endline="153">
public boolean isEmpty () {
    return getValueModel ().isEmpty ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="156" endline="159">
public Iterator iterator () {
    return getValueModel ().iterator ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="162" endline="165">
public boolean remove (Object e) {
    return getValueModel ().remove (e);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="168" endline="171">
public boolean removeAll (Collection c) {
    return getValueModel ().removeAll (c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="174" endline="177">
public boolean retainAll (Collection c) {
    return getValueModel ().retainAll (c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="180" endline="183">
public int size () {
    return getValueModel ().size ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="186" endline="189">
public void executeBatchAction (BatchAction action) {
    getValueModel ().executeBatchAction (action);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="192" endline="195">
public Object [] toArray () {
    return getValueModel ().toArray ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="198" endline="201">
public Object [] toArray (Object [] a) {
    return getValueModel ().toArray (a);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="204" endline="207">
public void add (int index, E element) {
    getValueModel ().add (index, element);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="210" endline="213">
public boolean addAll (int index, Collection < ? extends E > c) {
    return getValueModel ().addAll (index, c);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="240" endline="243">
public E remove (int index) {
    return getValueModel ().remove (index);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="252" endline="255">
public void apply (CollectionDifference < E > difference) {
    getValueModel ().apply (difference);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="258" endline="261">
public void unapply (CollectionDifference < E > difference) {
    getValueModel ().unapply (difference);
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="264" endline="267">
public ImmutableList < CollectionChangeListener < E > > getCollectionChangeListeners () {
    return observableCollectionSupport.getCollectionChangeListeners ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoCollectionValueModel.java" startline="270" endline="278">
public void dispose () {
    T valueModel = getValueModel ();
    if (valueModel != null) {
        valueModel.removeCollectionChangeListener (collectionChangeHandler);
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoValueModel.java" startline="47" endline="67">
public void setValue (Object value) {
    T valueModel = getValueModel ();
    Object valueOld;
    if (valueModel instanceof UndoSupport) {
        valueOld = ((UndoSupport) valueModel).getUndoableValue (value);
    } else {
        valueOld = valueModel.getValue ();
    }
    UndoRedoValue undoRedoValue = new UndoRedoValue (valueOld, value);
    UndoRedoValueModelOperation undoRedoValueModelOperation = new UndoRedoValueModelOperation (this, undoRedoValue);
    getUndoRedoManager ().push (undoRedoValueModelOperation);
    getUndoRedoManager ().beginTransaction ();
    getValueModel ().setValue (value);
    getUndoRedoManager ().endTransaction ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoValueModel.java" startline="87" endline="90">
public void undo (UndoRedoValue undoRedoValue) {
    getValueModel ().setValue (undoRedoValue.getOldValue ());
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="15" endline="22">
public void push (UndoRedoOperation operation) {
    if (! isCurrentlyInTransaction ()) {
        getRedoableOperations ().clear ();
        getOperations ().addLast (operation);
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="24" endline="37">
public void undo () {
    UndoRedoOperation peekLast = getOperations ().peekLast ();
    if (peekLast != null) {
        if (! checkIfOperationIsSavePoint (peekLast)) {
            getOperations ().pollLast ();
            getRedoableOperations ().addFirst (peekLast);
            peekLast.undo ();
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="39" endline="50">
protected boolean checkIfOperationIsSavePoint (UndoRedoOperation peekLast) {
    for (SavePoint savePoint : getSavePoints ()) {
        if (peekLast.equals (savePoint.getOrigin ())) {
            return true;
        }
    }
    return false;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="52" endline="60">
public void redo () {
    UndoRedoOperation pollFirst = getRedoableOperations ().pollFirst ();
    if (pollFirst != null) {
        getOperations ().addLast (pollFirst);
        pollFirst.redo ();
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="62" endline="65">
public boolean beginTransaction () {
    return transactionCount.incrementAndGet () == 1;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="67" endline="70">
public void endTransaction () {
    transactionCount.decrementAndGet ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="72" endline="82">
public SavePoint createSavePoint () {
    getRedoableOperations ().clear ();
    UndoRedoOperation peekLast = getOperations ().peekLast ();
    DefaultSavePoint savePoint = new DefaultSavePoint (peekLast);
    getSavePoints ().add (savePoint);
    return savePoint;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="84" endline="102">
public void commit (SavePoint savePoint) {
    if (savePoint == null) {
        if (! getSavePoints ().isEmpty ()) {
            throw new IllegalStateException ("A null SavePoint was committed while there are SavePoints tracked");
        }
        return;
    }
    if (getSavePoints ().isEmpty () || ! getSavePoints ().contains (savePoint) || ! getSavePoints ().peekLast ().equals (savePoint)) {
        throw new IllegalStateException ("Trying to commit SavePoint that is not tracked by the UndoRedoManager");
    }
    getSavePoints ().removeLast ();
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="104" endline="149">
public void rollback (SavePoint savePoint) {
    try {
        beginTransaction ();
        UndoRedoOperation origin = savePoint.getOrigin ();
        if (origin == null || getOperations ().contains (origin)) {
            Iterator < UndoRedoOperation > descendingIterator = getOperations ().descendingIterator ();
            LinkedList < UndoRedoOperation > undoSavePointOperations = new LinkedList < UndoRedoOperation > ();
            while (descendingIterator.hasNext ()) {
                UndoRedoOperation undoRedoValueModelAction = descendingIterator.next ();
                if (origin != null && undoRedoValueModelAction.equals (origin)) {
                    break;
                }
                undoSavePointOperations.addFirst (undoRedoValueModelAction);
                descendingIterator.remove ();
                undoRedoValueModelAction.undo ();
            }
            if (! undoSavePointOperations.isEmpty ()) {
                SavePointUndoRedoOperation savePointUndoRedoOperation = new SavePointUndoRedoOperation (undoSavePointOperations);
                getRedoableOperations ().addFirst (savePointUndoRedoOperation);
            }
        }
        getSavePoints ().removeLast ();
    } finally {
        endTransaction ();
    }
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="151" endline="154">
protected LinkedList < UndoRedoOperation > getOperations () {
    return operations;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="156" endline="159">
protected LinkedList < UndoRedoOperation > getRedoableOperations () {
    return redoableOperations;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="161" endline="164">
protected boolean isCurrentlyInTransaction () {
    return transactionCount.get () > 0;
}
</source>
<source file="projects/systems/360-Innovations_binding/binding/src/com/netappsid/undoredo/UndoRedoManager.java" startline="166" endline="169">
protected LinkedList < SavePoint > getSavePoints () {
    return savePoints;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/util/Crc16.java" startline="36" endline="40">
public static short calculate (short crcValue, byte data) {
    short x = (short) (((crcValue>>> 8) ^ data) & 0xff);
    x ^= (x>>> 4);
    return (short) ((crcValue << 8) ^ (x << 12) ^ (x << 5) ^ x);
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/util/Crc16.java" startline="49" endline="57">
public static short calculate (byte [] data, int offset, int length) {
    short crcValue = INIT_VALUE;
    int counter = length;
    int index = offset;
    while (counter -- > 0) {
        crcValue = calculate (crcValue, data [index ++]);
    }
    return crcValue;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/util/Crc16.java" startline="65" endline="67">
public static short calculate (byte [] data) {
    return calculate (data, 0, data.length);
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/memory/ReadOnlyMemory.java" startline="46" endline="48">
public boolean write (boolean isByteMode, int address, int value) {
    return false;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/memory/RandomAccessMemory.java" startline="119" endline="121">
public int getStartAddress () {
    return startAddress;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/memory/RandomAccessMemory.java" startline="124" endline="126">
public int getSize () {
    return size;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/memory/RandomAccessMemory.java" startline="129" endline="131">
public short [] getData () {
    return data;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/memory/RandomAccessMemory.java" startline="170" endline="172">
public int read (boolean isByteMode, int address) {
    return isByteMode ? readByte (address) : readWord (address);
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/memory/RandomAccessMemory.java" startline="175" endline="182">
public boolean write (boolean isByteMode, int address, int value) {
    if (isByteMode) {
        writeByte (address, value);
    } else {
        writeWord (address, value);
    }
    return true;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/cpu/opcode/ConditionCodeOpcodes.java" startline="79" endline="85">
public void execute () {
    int instruction = getInstruction ();
    int psw = getCpu ().getPswState ();
    int conditionMask = instruction & 017;
    psw = (instruction & 020) != 0 ? (psw | conditionMask) : (psw & ~ conditionMask);
    getCpu ().setPswState ((short) psw);
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/io/Sel1RegisterSystemBits.java" startline="62" endline="67">
public int read (long cpuTime, int address) {
    int result = state;
    setWriteFlagState (false);
    return result;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/io/Sel1RegisterSystemBits.java" startline="70" endline="74">
public boolean write (long cpuTime, boolean isByteMode, int address, int value) {
    setWriteFlagState (true);
    return true;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/io/Timer.java" startline="137" endline="146">
public int read (long cpuTime, int address) {
    switch (address) {
        case PRESET_REGISTER_ADDRESS :
            return getPresetRegister ();
        case CONTROL_REGISTER_ADDRESS :
            return getControlRegister (cpuTime);
        default :
            return getCounterRegister (cpuTime);
    }
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/io/Timer.java" startline="149" endline="162">
public boolean write (long cpuTime, boolean isByteMode, int address, int value) {
    switch (address & 0177776) {
        case PRESET_REGISTER_ADDRESS :
            setPresetRegister (cpuTime, value);
            break;
        case CONTROL_REGISTER_ADDRESS :
            setControlRegister (cpuTime, value);
            break;
        default :
            break;
    }
    return true;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/Computer.java" startline="428" endline="430">
public Cpu getCpu () {
    return cpu;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/Computer.java" startline="484" endline="498">
public void addMemory (Memory memory) {
    int memoryStartBlock = memory.getStartAddress ()>> 13;
    int memoryBlocksCount = memory.getSize ()>> 12;
    if ((memory.getSize () & 07777) != 0) {
        memoryBlocksCount ++;
    }
    for (int memoryBlockIdx = 0;
    memoryBlockIdx < memoryBlocksCount; memoryBlockIdx ++) {
        memoryTable [memoryStartBlock + memoryBlockIdx] = memory;
    }
    int memoryEndAddress = memory.getStartAddress () + (memory.getSize () << 1);
    if (getDevicesStartAddress () < memoryEndAddress) {
        setDevicesStartAddress (Math.min (memoryEndAddress, IO_REGISTERS_MAX_ADDRESS));
    }
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/Computer.java" startline="504" endline="517">
public void addDevice (Device device) {
    deviceList.add (device);
    int [] deviceAddresses = device.getAddresses ();
    for (int deviceAddress : deviceAddresses) {
        int deviceTableIndex = (deviceAddress - IO_REGISTERS_MIN_ADDRESS)>> 1;
        @SuppressWarnings ("unchecked")
        List < Device > addressDevices = (List < Device >) deviceTable [deviceTableIndex];
        if (addressDevices == null) {
            addressDevices = new ArrayList < Device > (1);
            deviceTable [deviceTableIndex] = addressDevices;
        }
        addressDevices.add (device);
    }
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/Computer.java" startline="567" endline="569">
public synchronized void reset () {
    getCpu ().reset ();
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/Computer.java" startline="578" endline="605">
public int readMemory (boolean isByteMode, int address) {
    int readValue = BUS_ERROR;
    if (address >= getDevicesStartAddress ()) {
        List < Device > subdevices = getDevices (address);
        if (subdevices != null) {
            long cpuClock = getCpu ().getTime ();
            readValue = 0;
            for (Device subdevice : subdevices) {
                int subdeviceState = subdevice.read (cpuClock, address & 0177776);
                if (isByteMode && (address & 1) != 0) {
                    subdeviceState>>= 8;
                }
                readValue |= (subdeviceState & (isByteMode ? 0377 : 0177777));
            }
        }
    } else {
        Memory memory = getMemory (address);
        if (memory != null) {
            readValue = memory.read (isByteMode, address);
        }
    }
    return readValue;
}
</source>
<source file="projects/systems/3cky_bkemu-android/bkemu-android/src/su/comp/bk/arch/Computer.java" startline="615" endline="637">
public boolean writeMemory (boolean isByteMode, int address, int value) {
    boolean isWritten = false;
    if (address >= getDevicesStartAddress ()) {
        List < Device > devices = getDevices (address);
        if (devices != null) {
            long cpuClock = getCpu ().getTime ();
            for (Device device : devices) {
                if (device.write (cpuClock, isByteMode, address, value)) {
                    isWritten = true;
                }
            }
        }
    } else {
        Memory memory = getMemory (address);
        if (memory != null) {
            isWritten = memory.write (isByteMode, address, value);
        }
    }
    return isWritten;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/internal/ListSetIterator.java" startline="18" endline="21">
public boolean hasNext () {
    return internal.hasNext ();
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/internal/ListSetIterator.java" startline="23" endline="27">
public E next () {
    current = internal.next ();
    return current;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/internal/ListSetIterator.java" startline="55" endline="63">
public void set (E e) {
    if (source.contains (e) && (current != null && ! current.equals (e))) {
        throw new IllegalArgumentException ("element " + e.toString () + " already present.");
    }
    internal.set (e);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/ArrayListSet.java" startline="66" endline="70">
public boolean add (E e) {
    assertPossibleDuplication (e);
    return internal.add (e);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/ArrayListSet.java" startline="85" endline="89">
public boolean addAll (Collection < ? extends E > c) {
    assertPossibleDuplication (c);
    return internal.addAll (c);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/ArrayListSet.java" startline="92" endline="96">
public boolean addAll (int index, Collection < ? extends E > c) {
    assertPossibleDuplication (c);
    return internal.addAll (index, c);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/ArrayListSet.java" startline="123" endline="127">
public E set (int index, E element) {
    assertPossibleDuplication (element);
    return internal.set (index, element);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/ArrayListSet.java" startline="130" endline="134">
public void add (int index, E element) {
    assertPossibleDuplication (element);
    internal.add (index, element);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/ArrayListSet.java" startline="155" endline="158">
public ListIterator < E > listIterator () {
    return new ListSetIterator < E > (this, internal.listIterator ());
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/ArrayListSet.java" startline="161" endline="164">
public ListIterator < E > listIterator (int index) {
    return new ListSetIterator < E > (this, internal.listIterator (index));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/ArrayListSet.java" startline="167" endline="170">
public List < E > subList (int fromIndex, int toIndex) {
    return new ArrayListSet < E > (internal.subList (fromIndex, toIndex));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/collection/ArrayListSet.java" startline="213" endline="219">
public static < E > ArrayListSet < E > of (E...elements) {
    final ArrayListSet < E > arrayListSet = new ArrayListSet < E > ();
    Collections.addAll (arrayListSet, elements);
    return arrayListSet;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableCollections.java" startline="24" endline="27">
public static < E > ObservableSet < E > newObservableHashSet (E...elements) {
    return decorateSet (newHashSet (elements));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableCollections.java" startline="44" endline="47">
public static < E > ObservableSet < E > newObservableHashSet (Iterator < E > iterator) {
    return decorateSet (newHashSet (iterator));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableCollections.java" startline="49" endline="52">
public static < E > ObservableList < E > newObservableArrayList (E...elements) {
    return decorateList (newArrayList (elements));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableCollections.java" startline="54" endline="57">
public static < E > ObservableList < E > newObservableArrayList (Iterator < E > iterator) {
    return decorateList (newArrayList (iterator));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableCollections.java" startline="69" endline="72">
public static < E > ObservableList < E > decorateList (List < E > source) {
    return new ObservableListDecorator (source);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/LazyInitializerList.java" startline="31" endline="34">
public void addCollectionChangeListener (CollectionChangeListener < E > listener) {
    getInitilized ().addCollectionChangeListener (listener);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/LazyInitializerList.java" startline="79" endline="82">
public boolean add (E e) {
    return getInitilized ().add (e);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/LazyInitializerList.java" startline="133" endline="136">
public E get (int index) {
    return getInitilized ().get (index);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/LazyInitializerList.java" startline="145" endline="148">
public void add (int index, E element) {
    getInitilized ().add (index, element);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/ObservableFilteredListIterator.java" startline="20" endline="37">
public boolean hasNext () {
    if (source.hasNext ()) {
        try {
            return predicate.apply (source.next ()) ? true : hasNext ();
        } finally {
            source.previous ();
        }
    } else {
        return false;
    }
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/ObservableFilteredListIterator.java" startline="40" endline="44">
public E next () {
    index ++;
    return recursiveNext ();
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/ObservableFilteredListIterator.java" startline="47" endline="64">
public boolean hasPrevious () {
    if (source.hasPrevious ()) {
        try {
            return predicate.apply (source.previous ()) ? true : hasPrevious ();
        } finally {
            source.next ();
        }
    } else {
        return false;
    }
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/ObservableFilteredListIterator.java" startline="67" endline="71">
public E previous () {
    index --;
    return recursivePrevious ();
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/ObservableFilteredListIterator.java" startline="74" endline="77">
public int nextIndex () {
    return index + 1;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/ObservableFilteredListIterator.java" startline="80" endline="83">
public int previousIndex () {
    return index;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/ObservableFilteredListIterator.java" startline="86" endline="90">
public void remove () {
    source.remove ();
    index --;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/ObservableFilteredListIterator.java" startline="93" endline="101">
public void set (E e) {
    source.set (e);
    if (! predicate.apply (e)) {
        index --;
    }
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/internal/ObservableFilteredListIterator.java" startline="104" endline="112">
public void add (E e) {
    source.add (e);
    if (predicate.apply (e)) {
        index ++;
    }
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ListDifference.java" startline="32" endline="64">
public static < E > ListDifference < E > difference (ImmutableList < E > oldList, ImmutableList < E > newList) {
    final List < E > oldListCopy = newArrayList (oldList);
    final List < E > newListCopy = newArrayList (newList);
    boolean hasMovedIndexes = false;
    for (ListIterator < E > oldListIterator = oldListCopy.listIterator ();
    oldListIterator.hasNext ();) {
        final E leftElement = oldListIterator.next ();
        for (ListIterator < E > newListIterator = newListCopy.listIterator ();
        newListIterator.hasNext ();) {
            if (Objects.equal (leftElement, newListIterator.next ())) {
                Integer leftIndex = oldListIterator.nextIndex () - 1;
                Integer rightIndex = newListIterator.nextIndex () - 1;
                oldListIterator.remove ();
                newListIterator.remove ();
                if (! hasMovedIndexes && ! leftIndex.equals (rightIndex)) {
                    hasMovedIndexes = true;
                }
                break;
            }
        }
    }
    return new ListDifference < E > (ImmutableList.copyOf (oldListCopy), ImmutableList.copyOf (newListCopy), hasMovedIndexes);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableIterator.java" startline="26" endline="30">
public E next () {
    next = internal.next ();
    return next;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableIterator.java" startline="33" endline="38">
public void remove () {
    internal.remove ();
    observableSupport.fireCollectionChangeEvent (observableSupport.newCollectionChangeEvent (new ListDifference < E > (ImmutableList.of (next), ImmutableList.< E > of ())));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ClearAndAddAllBatchAction.java" startline="15" endline="23">
public void execute (Collection < T > collection) {
    collection.clear ();
    if (this.newCollection != null) {
        collection.addAll (this.newCollection);
    }
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="102" endline="105">
public V get (Object key) {
    return internal.get (key);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="114" endline="120">
public V put (K key, V value) {
    getSupport ().createSnapshot ();
    V result = internal.put (key, value);
    getSupport ().fireCollectionChangeEvent (key);
    return result;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="128" endline="134">
public V remove (Object key) {
    getSupport ().createSnapshot ();
    V result = internal.remove (key);
    getSupport ().fireCollectionChangeEvent (key);
    return result;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="153" endline="158">
public void clear () {
    getSupport ().createSnapshot ();
    internal.clear ();
    getSupport ().fireCollectionChangeEvent ();
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="165" endline="168">
public Set < K > keySet () {
    return new ObservableSetDecorator < K > (internal.keySet (), (InternalObservableCollectionSupport) getSupport ());
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="175" endline="178">
public Collection < V > values () {
    return new ObservableCollectionDecorator (internal.values (), getSupport ());
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="185" endline="188">
public Set < java.util.Map.Entry < K, V > > entrySet () {
    return new ObservableSetDecorator < Map.Entry < K, V > > (internal.entrySet (), getSupport ());
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="231" endline="234">
public void addCollectionChangeListener (CollectionChangeListener < Map.Entry < K, V > > listener) {
    getSupport ().addCollectionChangeListener (listener);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="249" endline="252">
public Map < K, V > copyInternal () {
    return Maps.newHashMap (internal);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="255" endline="266">
public void apply (CollectionDifference < java.util.Map.Entry < K, V > > difference) {
    for (java.util.Map.Entry < K, V > added : difference.getAdded ()) {
        put (added.getKey (), added.getValue ());
    }
    for (java.util.Map.Entry < K, V > removed : difference.getRemoved ()) {
        remove (removed.getKey ());
    }
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableMapDecorator.java" startline="269" endline="280">
public void unapply (CollectionDifference < java.util.Map.Entry < K, V > > difference) {
    for (java.util.Map.Entry < K, V > added : difference.getAdded ()) {
        remove (added.getKey ());
    }
    for (java.util.Map.Entry < K, V > removed : difference.getRemoved ()) {
        put (removed.getKey (), removed.getValue ());
    }
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableListIterator.java" startline="22" endline="28">
public void add (E e) {
    internal.add (e);
    final int eventIndex = internal.previousIndex () != - 1 ? internal.previousIndex () : 0;
    final CollectionChangeEvent event = support.newCollectionChangeEvent (new ListDifference < E > (ImmutableList.< E > of (), ImmutableList.of (e)), eventIndex);
    support.fireCollectionChangeEvent (event);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableListIterator.java" startline="43" endline="48">
public E next () {
    index = nextIndex ();
    element = internal.next ();
    return element;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableListIterator.java" startline="51" endline="54">
public int nextIndex () {
    return internal.nextIndex ();
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableListIterator.java" startline="71" endline="75">
public void remove () {
    internal.remove ();
    support.fireCollectionChangeEvent (support.newCollectionChangeEvent (new ListDifference < E > (ImmutableList.of (element), ImmutableList.< E > of ()), index));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableListIterator.java" startline="78" endline="82">
public void set (E e) {
    internal.set (e);
    support.fireCollectionChangeEvent (support.newCollectionChangeEvent (new ListDifference < E > (ImmutableList.of (element), ImmutableList.of (e)), index));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableUnsafeFilteredSubList.java" startline="75" endline="80">
public boolean add (E e) {
    final int previousSize = indexes.size ();
    super.add (e);
    return indexes.size () != previousSize;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableUnsafeFilteredSubList.java" startline="83" endline="88">
public boolean remove (Object o) {
    final int previousSize = indexes.size ();
    super.remove (o);
    return indexes.size () != previousSize;
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableUnsafeFilteredSubList.java" startline="143" endline="146">
public E get (int index) {
    return super.get (indexes.get (index));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableUnsafeFilteredSubList.java" startline="149" endline="152">
public E set (int index, E element) {
    return super.set (indexes.get (index), element);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableUnsafeFilteredSubList.java" startline="155" endline="158">
public void add (int index, E element) {
    super.add (indexes.get (index), element);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableUnsafeFilteredSubList.java" startline="161" endline="164">
public E remove (int index) {
    return super.remove ((int) indexes.get (index));
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableUnsafeFilteredSubList.java" startline="193" endline="199">
public List < E > subList (int fromIndex, int toIndex) {
    final ObservableList < E > subList = (ObservableList < E >) super.subList (indexes.get (fromIndex), indexes.get (toIndex));
    subList.addCollectionChangeListener (new CollectionChangeHandler ());
    return new ObservableUnsafeFilteredSubList < E > (subList, filterPredicate);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableUnsafeFilteredSubList.java" startline="219" endline="237">
public void setFilter (Predicate < ? super E > filterPredicate) {
    final ImmutableList < E > oldList = ImmutableList.copyOf (this);
    if (filterPredicate != null) {
        this.filterPredicate = filterPredicate;
    } else {
        this.filterPredicate = Predicates.alwaysTrue ();
    }
    refreshIndexesMap ();
    ListDifference < E > difference = ListDifference.difference (oldList, ImmutableList.copyOf (this));
    CollectionChangeEvent < E > newCollectionChangeEvent = getSupport ().newCollectionChangeEvent (difference);
    getSupport ().fireCollectionChangeEvent (newCollectionChangeEvent);
}
</source>
<source file="projects/systems/360-Innovations_observable/observable/src/com/netappsid/observable/ObservableUnsafeFilteredSubList.java" startline="280" endline="283">
public static < E > ObservableUnsafeFilteredSubList < E > of (ObservableList < ? super E > source, Predicate < ? super E > filterPredicate) {
    return new ObservableUnsafeFilteredSubList (source, filterPredicate);
}
</source>
<source file="projects/systems/13leaf_QADDroid/QADDroid/QADDroid/src/com/qad/lang/Strings.java" startline="658" endline="687">
public static String appendUrlParam (String originUrl, String param) {
    if (originUrl == null || param == null) return originUrl;

    int paramStart = originUrl.indexOf ('?');
    int fragmentStart = originUrl.indexOf ('#');
    String baseUrl = originUrl;
    String fragment = "";
    if (paramStart != - 1) {
        baseUrl = originUrl.substring (0, paramStart);
    }
    if (paramStart == - 1 && fragmentStart != - 1) {
        baseUrl = originUrl.substring (0, fragmentStart);
    }
    if (fragmentStart != - 1) {
        fragment = originUrl.substring (fragmentStart + 1);
    }
    String baseParam = "";
    if (paramStart != - 1 && fragmentStart != - 1) {
        baseParam = originUrl.substring (paramStart + 1, fragmentStart);
    } else if (paramStart != - 1) {
        baseParam = originUrl.substring (paramStart + 1);
    }

    if (baseParam.length () != 0) {
        param = baseParam + "&" + param;
    }
    String outUrl = baseUrl + "?" + param + (fragment.length () == 0 ? "" : "#" + fragment);
    return outUrl;
}
</source>
<source file="projects/systems/13leaf_QADDroid/QADDroid/QADDroid/src/com/qad/lang/Files.java" startline="58" endline="66">
public static void write (String path, Object obj) {
    if (null == path || null == obj) return;

    try {
        write (Files.createFileIfNoExists (path), obj);
    } catch (IOException e) {
        throw Lang.wrapThrow (e);
    }
}
</source>
<source file="projects/systems/13leaf_QADDroid/QADDroid/QADDroid/src/com/qad/lang/Files.java" startline="83" endline="112">
public static void write (File f, Object obj) {
    if (null == f || null == obj) return;

    if (f.isDirectory ()) throw Lang.makeThrow ("Directory '%s' can not be write as File", f);

    try {
        if (! f.exists ()) Files.createNewFile (f);

        if (obj instanceof InputStream) {
            Streams.writeAndClose (Streams.fileOut (f), (InputStream) obj);
        } else if (obj instanceof byte []) {
            Streams.writeAndClose (Streams.fileOut (f), (byte []) obj);
        } else if (obj instanceof Reader) {
            Streams.writeAndClose (Streams.fileOutw (f), (Reader) obj);
        } else {
            Streams.writeAndClose (Streams.fileOutw (f), obj.toString ());
        }

    } catch (IOException e) {
        throw Lang.wrapThrow (e);
    }
}
</source>
<source file="projects/systems/13leaf_QADDroid/QADDroid/QADDroid/src/com/qad/lang/Files.java" startline="438" endline="443">
public static boolean createNewFile (File f) throws IOException {
    if (null == f || f.exists ()) return false;

    makeDir (f.getParentFile ());
    return f.createNewFile ();
}
</source>
<source file="projects/systems/13leaf_QADDroid/QADDroid/QADDroid/src/com/qad/lang/Files.java" startline="466" endline="486">
public static boolean deleteDir (File dir) {
    if (null == dir || ! dir.exists ()) return false;

    if (! dir.isDirectory ()) throw new RuntimeException ("\"" + dir.getAbsolutePath () + "\" should be a directory!");

    File [] files = dir.listFiles ();
    boolean re = false;
    if (null != files) {
        if (files.length == 0) return dir.delete ();

        for (File f : files) {
            if (f.isDirectory ()) re |= deleteDir (f);
            else re |= deleteFile (f);

        }
        re |= dir.delete ();
    }
    return re;
}
</source>
<source file="projects/systems/13leaf_QADDroid/QADDroid/QADDroid/src/com/qad/lang/Files.java" startline="791" endline="793">
public static File [] scanFiles (File rootDir) {
    return scanFiles (rootDir, null);
}
</source>
<source file="projects/systems/13leaf_QADDroid/QADDroid/QADDroid/src/com/qad/lang/Files.java" startline="802" endline="820">
public static File [] scanFiles (File rootDir, FileFilter filter) {
    ArrayList < File > dirList = new ArrayList < File > ();
    scanDirs (rootDir, dirList);
    LinkedList < File > fileList = new LinkedList < File > ();
    for (File dir : dirList) {
        for (File file : dir.listFiles (filter)) {
            if (file.isFile ()) fileList.add (file);

        }
    }
    for (File file : rootDir.listFiles (filter)) {
        if (file.isFile ()) fileList.add (file);

    }
    return fileList.toArray (new File [fileList.size ()]);
}
</source>
<source file="projects/systems/13leaf_QADDroid/QADDroid/QADDroid/src/com/qad/lang/Files.java" startline="1157" endline="1168">
public static long size (File file) {
    if (null == file) return 0;

    if (file.isFile ()) return file.length ();

    if (! file.exists ()) return - 1;

    long size = 0;
    for (File aFile : scanFiles (file)) {
        size += aFile.length ();
    }
    return size;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/BooleanItem.java" startline="24" endline="26">
public Boolean getValueAsBoolean () {
    return (Boolean) getValue ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/events/FormItemIconClickEvent.java" startline="37" endline="40">
public static Event.Type < FormItemClickHandler > getType () {
    return TYPE == null ? TYPE = new Event.Type < FormItemClickHandler > () : TYPE;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/events/FormItemIconClickEvent.java" startline="50" endline="53">
public Event.Type < FormItemClickHandler > getAssociatedType () {
    return getType ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/events/FormItemIconClickEvent.java" startline="60" endline="63">
public DynamicForm getForm () {
    return form;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/events/FormItemIconClickEvent.java" startline="70" endline="73">
public FormItem getItem () {
    return item;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/events/FormItemIconClickEvent.java" startline="80" endline="83">
public FormItemIcon getIcon () {
    return icon;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/events/FormItemIconClickEvent.java" startline="86" endline="89">
protected void dispatch (FormItemClickHandler handler) {
    handler.onFormItemClick (this);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItemIcon.java" startline="269" endline="271">
protected Set < FormItemClickHandler > getFormItemClickHandlers () {
    return Sets.newHashSet (formItemClickHandlers);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItemIcon.java" startline="274" endline="282">
public HandlerRegistration addFormItemClickHandler (final FormItemClickHandler handler) {
    formItemClickHandlers.add (handler);
    return new HandlerRegistration () {
        @Override
        public void removeHandler () {
            formItemClickHandlers.remove (handler);
        }}

    ;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItemIcon.java" startline="278" endline="280">
public void removeHandler () {
    formItemClickHandlers.remove (handler);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItemIcon.java" startline="285" endline="291">
public void paintContent (PaintTarget target) throws PaintException {
    if (! formItemClickHandlers.isEmpty ()) {
        target.addAttribute ("*hasFormItemClickHandlers", true);
    }
    super.paintContent (target);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItemIcon.java" startline="294" endline="308">
public void changeVariables (Object source, Map < String, Object > variables) {
    final Map < String, Object > formItemIconClickEventVariables = filterComplexVariable (variables, "formItemIconClickEvent");
    if (! formItemIconClickEventVariables.isEmpty ()) {
        final DynamicForm form = (DynamicForm) formItemIconClickEventVariables.get ("form");
        final FormItem item = (FormItem) formItemIconClickEventVariables.get ("item");
        final FormItemIcon icon = (FormItemIcon) formItemIconClickEventVariables.get ("icon");
        final FormItemIconClickEvent event = new FormItemIconClickEvent (form, item, icon);
        for (FormItemClickHandler handler : formItemClickHandlers) {
            handler.onFormItemClick (event);
        }
    }
    super.changeVariables (source, variables);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItem.java" startline="3977" endline="3979">
public void setType (String type) {
    setAttribute ("type", type);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItem.java" startline="4781" endline="4783">
public FormItemIcon [] getIcons () {
    return this.icons.get ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItem.java" startline="4792" endline="4794">
public void setIcons (FormItemIcon...icons) {
    this.icons.set (icons);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItem.java" startline="4800" endline="4802">
public Object getValue () {
    return getAttributeAsObject (ATTRIBUTE_VALUE);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItem.java" startline="4804" endline="4807">
public void setValue (Object value) {
    setPropertyAttribute (ATTRIBUTE_VALUE, PROPERTYNAME_VALUE, value);
    requestRepaint ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItem.java" startline="4810" endline="4820">
public void changeVariables (Object source, Map < String, Object > variables) {
    super.changeVariables (source, variables);
    if (variables.containsKey (ATTRIBUTE_VALUE)) {
        if (FormItemType.BOOLEAN.getValue ().equals (getType ())) {
            setPropertyAttribute (ATTRIBUTE_VALUE, PROPERTYNAME_VALUE, Boolean.valueOf ((String) variables.get (ATTRIBUTE_VALUE)));
        } else {
            setPropertyAttribute (ATTRIBUTE_VALUE, PROPERTYNAME_VALUE, variables.get (ATTRIBUTE_VALUE));
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItem.java" startline="4822" endline="4824">
public void addPropertyChangeListener (PropertyChangeListener listener) {
    propertyChangeSupport.addPropertyChangeListener (listener);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItem.java" startline="4826" endline="4828">
public void addPropertyChangeListener (String propertyName, PropertyChangeListener listener) {
    propertyChangeSupport.addPropertyChangeListener (propertyName, listener);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/form/fields/FormItem.java" startline="4839" endline="4842">
public void paintContent (PaintTarget target) throws PaintException {
    propertyPainter.paintContent (target);
    super.paintContent (target);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Window.java" startline="1222" endline="1226">
public void show () {
    if (registrationEntry == null) {
        registrationEntry = container.register (this);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Window.java" startline="1228" endline="1233">
public void dispose () {
    if (registrationEntry != null && registrationEntry.isRegistered ()) {
        registrationEntry.unregister ();
        registrationEntry = null;
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Window.java" startline="1245" endline="1253">
public HandlerRegistration addCloseClickHandler (final CloseClickHandler handler) {
    closeClickHandlers.add (handler);
    return new com.google.web.bindery.event.shared.HandlerRegistration () {
        @Override
        public void removeHandler () {
            closeClickHandlers.remove (handler);
        }}

    ;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Window.java" startline="1249" endline="1251">
public void removeHandler () {
    closeClickHandlers.remove (handler);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Window.java" startline="1260" endline="1268">
public void paintContent (PaintTarget target) throws PaintException {
    propertyPainter.paintContent (target);
    if (! closeClickHandlers.isEmpty ()) {
        target.addAttribute ("*hasCloseClickHandlers", true);
    }
    super.paintContent (target);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Window.java" startline="1271" endline="1284">
public void changeVariables (Object source, Map < String, Object > variables) {
    super.changeVariables (source, variables);
    if (variables.containsKey ("destroyed")) {
        dispose ();
    }
    if (variables.containsKey ("onCloseClick")) {
        final CloseClickEvent event = new CloseClickEvent ();
        for (CloseClickHandler handler : closeClickHandlers) {
            handler.onCloseClick (event);
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/core/ComponentPropertyPainter.java" startline="30" endline="32">
public Set < ComponentProperty > getComponentProperties () {
    return new HashSet < ComponentProperty > (properties);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/core/ComponentPropertyPainter.java" startline="46" endline="50">
public < T extends Component > ComponentArray < T > addComponentArray (String propertyName) {
    final ComponentArray < T > array = new ComponentArray < T > (parent, "$" + propertyName);
    properties.add (array);
    return array;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/core/ComponentArray.java" startline="18" endline="20">
public Object getTagName () {
    return tagName;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/core/ComponentArray.java" startline="22" endline="24">
public T [] get () {
    return components;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/core/ComponentArray.java" startline="26" endline="40">
public void set (T [] components) {
    if (this.components != null) {
        for (T component : this.components) {
            component.setParent (null);
        }
    }
    this.components = components;
    if (this.components != null) {
        for (T component : this.components) {
            component.setParent (parent);
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/core/ComponentArray.java" startline="43" endline="54">
public void paintContent (PaintTarget target) throws PaintException {
    target.startTag (tagName);
    target.addAttribute ("type", "Array");
    if (components != null) {
        for (Paintable paintable : components) {
            paintable.paint (target);
        }
    }
    target.endTag (tagName);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/HTMLPane.java" startline="55" endline="62">
public void setIFrameResource (Resource resource) {
    setContentsResource (resource);
    if (! isDrawn ()) {
        setContentsType (ContentsType.PAGE);
    } else {
        assert getContentsType () == ContentsType.PAGE : "This method cannot be called on a HTMLPane that has a contentsType other than PAGE";
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/util/JSONHelper.java" startline="14" endline="33">
public static String getJsonString (Record [] records) throws Exception {
    ObjectMapper objectMapper = new ObjectMapper ();
    objectMapper.configure (SerializationConfig.Feature.WRITE_DATES_AS_TIMESTAMPS, false);
    StringBuffer buffer = new StringBuffer ();
    buffer.append ('[');
    for (Iterator < Record > iterator = Arrays.asList (records).iterator ();
    iterator.hasNext ();) {
        buffer.append (objectMapper.writeValueAsString (toMap (iterator.next ())));
        if (iterator.hasNext ()) {
            buffer.append (',');
        }
    }
    buffer.append (']');
    return buffer.toString ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/MasterContainer.java" startline="38" endline="40">
public Iterator < NonUIComponent > getNonUIComponentIterator () {
    return nonUIComponents.iterator ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/MasterContainer.java" startline="47" endline="49">
public void addNonUIComponent (NonUIComponent component) {
    nonUIComponents.add (component);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/MasterContainer.java" startline="56" endline="58">
public void removeNonUIComponent (NonUIComponent component) {
    nonUIComponents.remove (component);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/MasterContainer.java" startline="78" endline="94">
public RegistrationEntry register (final Window window) {
    this.window.add (window);
    requestRepaint ();
    return new RegistrationEntry () {
        @Override
        public void unregister () {
            MasterContainer.this.window.remove (window);
            requestRepaint ();
        }@Override
        public boolean isRegistered () {
            return MasterContainer.this.window.contains (window);
        }}

    ;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/MasterContainer.java" startline="84" endline="87">
public void unregister () {
    MasterContainer.this.window.remove (window);
    requestRepaint ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/MasterContainer.java" startline="90" endline="92">
public boolean isRegistered () {
    return MasterContainer.this.window.contains (window);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/MasterContainer.java" startline="97" endline="100">
public void paintContent (PaintTarget target) throws PaintException {
    paintablePropertyPainter.paintContent (target);
    super.paintContent (target);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/MasterContainer.java" startline="138" endline="140">
public void addListener (ComponentAttachListener listener) {
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/MasterContainer.java" startline="148" endline="150">
public void addListener (ComponentDetachListener listener) {
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="51" endline="53">
public Canvas getCenterMember () {
    return center.getMembers ().length > 0 ? center.getMembers () [0] : null;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="55" endline="66">
public void setCenterMember (Canvas member) {
    if (member == null) {
        center.setWidth (0);
        center.setHeight (0);
        center.setMembers ();
    } else {
        member.setHeight ("100%");
        member.setWidth ("100%");
        center.setWidth ("100%");
        center.setMembers (member);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="68" endline="70">
public Canvas getNorthMember () {
    return north.getMembers ().length > 0 ? north.getMembers () [0] : null;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="72" endline="81">
public void setNorthMember (Canvas member) {
    if (member == null) {
        north.setHeight (0);
        north.setMembers ();
    } else {
        member.setWidth ("100%");
        north.setHeight (1);
        north.setMembers (member);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="83" endline="85">
public Canvas getSouthMember () {
    return south.getMembers ().length > 0 ? south.getMembers () [0] : null;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="87" endline="96">
public void setSouthMember (Canvas member) {
    if (member == null) {
        south.setHeight (0);
        south.setMembers ();
    } else {
        member.setWidth ("100%");
        south.setHeight (1);
        south.setMembers (member);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="98" endline="100">
public Canvas getWestMember () {
    return west.getMembers ().length > 0 ? west.getMembers () [0] : null;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="102" endline="111">
public void setWestMember (Canvas member) {
    if (member == null) {
        west.setWidth (0);
        west.setMembers ();
    } else {
        member.setHeight ("100%");
        west.setWidth (1);
        west.setMembers (member);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="113" endline="115">
public Canvas getEastMember () {
    return east.getMembers ().length > 0 ? east.getMembers () [0] : null;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/layout/BorderLayout.java" startline="117" endline="126">
public void setEastMember (Canvas member) {
    if (member == null) {
        east.setWidth (0);
        east.setMembers ();
    } else {
        member.setHeight ("100%");
        east.setWidth (1);
        east.setMembers (member);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/BaseWidget.java" startline="933" endline="944">
public void setAttribute (String attribute, Object value, boolean allowPostCreate) {
    if (isCreated () && ! allowPostCreate) {
        throw new IllegalArgumentException ("Cannot modify property " + attribute + " once created");
    }
    if (value == null) attributes.remove (attribute);
    else attributes.put (attribute, value);

}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/BaseWidget.java" startline="952" endline="955">
public void setAttribute (String attribute, Object value) {
    setAttribute (attribute, value, true);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/BaseWidget.java" startline="1137" endline="1251">
public void paintContent (PaintTarget target) throws PaintException {
    JsonPaintTarget jspt = (JsonPaintTarget) target;
    for (Map.Entry < String, Object > entry : attributes.entrySet ()) {
        Object value = entry.getValue ();
        String name = entry.getKey ();
        if (name.length () >= 2 && name.charAt (1) == '$') {
            switch (name.charAt (0)) {
                case 'b' :
                    target.addAttribute (name, (Boolean) value);
                    break;
            }
            break;
        }
        if (value == null) {
            logPaintContentAttribute (name, null);
            target.addAttribute (name, "null");
        } else if (value instanceof Boolean) {
            logPaintContentAttribute (name, value);
            target.addAttribute (name, "b" + String.valueOf (value));
        } else if (value instanceof Integer) {
            logPaintContentAttribute (name, value);
            target.addAttribute (name, "i" + String.valueOf (value));
        } else if (value instanceof Float) {
            logPaintContentAttribute (name, value);
            target.addAttribute (name, "f" + String.valueOf (value));
        } else if (value instanceof Long) {
            logPaintContentAttribute (name, value);
            target.addAttribute (name, "l" + String.valueOf (value));
        } else if (value instanceof Double) {
            logPaintContentAttribute (name, value);
            target.addAttribute (name, "d" + String.valueOf (value));
        } else if (value instanceof String) {
            logPaintContentAttribute (name, value);
            target.addAttribute (name, "s" + String.valueOf (value));
        } else if (value instanceof String []) {
            logPaintContentAttribute (name, value);
            if (name.charAt (0) != '*') name = "!" + name;

            target.addAttribute (name, (String []) value);
        } else if (value instanceof Record []) {
            try {
                String json = JSONHelper.getJsonString ((Record []) value);
                target.addAttribute (name, "j" + json);
            } catch (Exception e) {
                e.printStackTrace ();
            }
        } else if (value instanceof Paintable []) {
            logPaintContentAttribute (name, value);
            List < String > references = new ArrayList < String > ();
            for (Paintable p : (Paintable []) value) {
                if (jspt.needsToBePainted (p)) p.paint (target);

                references.add (jspt.getPaintIdentifier (p));
            }
            if (name.charAt (0) != '*') name = "[" + name;

            target.addAttribute (name, references.toArray ());
        } else if (value instanceof Paintable) {
            logPaintContentAttribute (name, value);
            String ref = jspt.getPaintIdentifier ((Paintable) value);
            if (jspt.needsToBePainted ((Paintable) value)) ((Paintable) value).paint (target);

            if (name.charAt (0) != '*') name = "#" + name;

            target.addAttribute (name, ref);
        }

    }
    isCreated = true;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/tab/TabSet.java" startline="1158" endline="1161">
public void addTab (Tab tab) {
    tab.setTabSet (this);
    paintableTabs.add (tab);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/tab/TabSet.java" startline="1169" endline="1172">
public void addTab (Tab tab, int position) {
    tab.setTabSet (this);
    paintableTabs.add (position, tab);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/tab/TabSet.java" startline="1179" endline="1181">
public Tab [] getTabs () {
    return paintableTabs.toArray (new Tab [0]);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/tab/TabSet.java" startline="1185" endline="1189">
public void paintContent (PaintTarget target) throws PaintException {
    propertyPainter.paintContent (target);
    super.paintContent (target);
    client.paintContent (target);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/tab/TabSet.java" startline="1193" endline="1200">
public void changeVariables (Object source, Map < String, Object > variables) {
    super.changeVariables (source, variables);
    client.changeVariables (source, variables);
    if (variables.containsKey ("TabCloseClickEvent.tab")) {
        paintableTabs.clientRemoved ((Tab) variables.get ("TabCloseClickEvent.tab"));
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/extra/Refresher.java" startline="37" endline="39">
public int getInterval () {
    return interval;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/extra/Refresher.java" startline="46" endline="49">
public void setInterval (int interval) {
    assert interval > 0 : "interval must be a positive number";
    this.interval = interval;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/extra/Refresher.java" startline="57" endline="68">
public HandlerRegistration addListener (final RefreshListener listener) {
    assert listener != null : "listener must not be null";
    listeners.add (listener);
    requestRepaint ();
    return new HandlerRegistration () {
        @Override
        public void removeHandler () {
            listeners.remove (listener);
            requestRepaint ();
        }}

    ;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/extra/Refresher.java" startline="63" endline="66">
public void removeHandler () {
    listeners.remove (listener);
    requestRepaint ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/extra/Refresher.java" startline="71" endline="75">
public void paintContent (PaintTarget target) throws PaintException {
    if (! listeners.isEmpty ()) {
        target.addAttribute ("interval", interval);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/extra/Refresher.java" startline="78" endline="82">
public void changeVariables (Object source, Map < String, Object > variables) {
    for (RefreshListener listener : ImmutableList.copyOf (listeners)) {
        listener.refresh (this);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/events/ClickEvent.java" startline="24" endline="26">
public static Event.Type < ClickHandler > getType () {
    return TYPE == null ? TYPE = new Event.Type < ClickHandler > () : TYPE;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/events/ClickEvent.java" startline="29" endline="31">
public Event.Type < ClickHandler > getAssociatedType () {
    return getType ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/events/ClickEvent.java" startline="34" endline="36">
protected void dispatch (ClickHandler handler) {
    handler.onClick (this);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/HTMLFlow.java" startline="106" endline="108">
public void setContents (String contents) {
    setAttribute ("contents", contents, true);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/HTMLFlow.java" startline="117" endline="119">
public String getContents () {
    return getAttributeAsString ("contents");
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/HTMLFlow.java" startline="153" endline="155">
public void setContentsResource (Resource contentsResource) {
    this.contentsResource = contentsResource;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/HTMLFlow.java" startline="163" endline="165">
public Resource getContentsResource () {
    return contentsResource;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/HTMLFlow.java" startline="411" endline="416">
public void paintContent (PaintTarget target) throws PaintException {
    super.paintContent (target);
    if (contentsResource != null) {
        target.addAttribute ("*contentsResource", contentsResource);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordFactory.java" startline="26" endline="34">
public Record newRecord (JsonNode node) {
    if (! node.isNullNode ()) {
        final Record record = new Record ();
        updater.update (record, node);
        return record;
    } else {
        return null;
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordFactory.java" startline="42" endline="48">
public Record [] newRecords (List < JsonNode > nodes) {
    final Record [] records = new Record [nodes.size ()];
    for (int i = 0;
    i < records.length; i ++) {
        records [i] = newRecord (nodes.get (i));
    }
    return records;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordJSONUpdater.java" startline="37" endline="69">
public void update (final Record record, JsonNode node) {
    update (node, new JSONAdapter () {
        @Override
        public void addBooleanField (String name, Boolean value) {
            record.setAttribute (name, value);
        }@Override
        public void addNumberField (String name, BigInteger value) {
            record.setAttribute (name, value.longValue ());
        }@Override
        public void addNumberField (String name, BigDecimal value) {
            record.setAttribute (name, value.doubleValue ());
        }@Override
        public void addStringField (String name, String value) {
            record.setAttribute (name, value);
        }@Override
        public void addNullField (String name) {
            record.setAttribute (name, (Object) null);
        }@Override
        public void addObjectField (String name, Map < String, Object > value) {
            record.setAttribute (name, value);
        }}

    );
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordJSONUpdater.java" startline="40" endline="42">
public void addBooleanField (String name, Boolean value) {
    record.setAttribute (name, value);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordJSONUpdater.java" startline="45" endline="47">
public void addNumberField (String name, BigInteger value) {
    record.setAttribute (name, value.longValue ());
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordJSONUpdater.java" startline="50" endline="52">
public void addNumberField (String name, BigDecimal value) {
    record.setAttribute (name, value.doubleValue ());
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordJSONUpdater.java" startline="55" endline="57">
public void addStringField (String name, String value) {
    record.setAttribute (name, value);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordJSONUpdater.java" startline="60" endline="62">
public void addNullField (String name) {
    record.setAttribute (name, (Object) null);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordJSONUpdater.java" startline="65" endline="67">
public void addObjectField (String name, Map < String, Object > value) {
    record.setAttribute (name, value);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/data/RecordJSONUpdater.java" startline="71" endline="93">
private void update (JsonNode node, JSONAdapter adapter) {
    for (Entry < JsonStringNode, JsonNode > entry : node.getFields ().entrySet ()) {
        final String name = entry.getKey ().getText ();
        if (entry.getValue ().isBooleanValue ()) {
            adapter.addBooleanField (name, entry.getValue ().getBooleanValue ());
        } else if (entry.getValue ().isNumberValue ()) {
            final String numberValue = entry.getValue ().getNumberValue ();
            if (numberValue.contains (".") || numberValue.contains ("e") || numberValue.contains ("E")) {
                adapter.addNumberField (name, new BigDecimal (numberValue));
            } else {
                adapter.addNumberField (name, new BigInteger (numberValue));
            }
        } else if (entry.getValue ().isStringValue ()) {
            adapter.addStringField (name, entry.getValue ().getStringValue ());
        } else if (entry.getValue ().isNullNode ()) {
            adapter.addNullField (name);
        } else if (entry.getValue ().isObjectNode ()) {
            adapter.addObjectField (name, newJsonMap (entry.getValue ()));
        } else {
            throw new RuntimeException ("unhandled node type " + entry.getValue ());
        }

    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/DynamicFormBuilder.java" startline="15" endline="17">
public static DynamicFormBuilder buildDynamicForm () {
    return new DynamicFormBuilder (new DynamicForm ());
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/DynamicFormBuilder.java" startline="24" endline="26">
protected DynamicFormBuilder me () {
    return this;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/DynamicFormBuilder.java" startline="31" endline="34">
public DynamicFormBuilder setNumCols (int numCols) {
    instance ().setNumCols (numCols);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/DynamicFormBuilder.java" startline="39" endline="42">
public DynamicFormBuilder setAutoFocus (Boolean autoFocus) {
    instance ().setAutoFocus (autoFocus);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/DynamicFormBuilder.java" startline="47" endline="50">
public DynamicFormBuilder setFields (FormItem...fields) {
    instance ().setFields (fields);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/LabelBuilder.java" startline="15" endline="17">
public static LabelBuilder buildLabel (String contents) {
    return new LabelBuilder (new Label (contents));
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/LabelBuilder.java" startline="24" endline="26">
protected LabelBuilder me () {
    return this;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/BaseWidgetBuilder.java" startline="28" endline="30">
public T build () {
    return instance ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/BaseWidgetBuilder.java" startline="37" endline="39">
protected T instance () {
    return instance;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/LayoutBuilder.java" startline="20" endline="23">
public B setMembers (Canvas...members) {
    instance ().setMembers (members);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/LayoutBuilder.java" startline="28" endline="31">
public B setMembersMargin (int membersMargin) {
    instance ().setMembersMargin (membersMargin);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/HLayoutBuilder.java" startline="14" endline="16">
public static HLayoutBuilder buildHLayout () {
    return new HLayoutBuilder (new HLayout ());
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/HLayoutBuilder.java" startline="23" endline="25">
protected HLayoutBuilder me () {
    return this;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/VLayoutBuilder.java" startline="14" endline="16">
public static VLayoutBuilder buildVLayout () {
    return new VLayoutBuilder (new VLayout ());
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/VLayoutBuilder.java" startline="23" endline="25">
protected VLayoutBuilder me () {
    return this;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/BorderLayoutBuilder.java" startline="15" endline="17">
public static BorderLayoutBuilder buildBorderLayout () {
    return new BorderLayoutBuilder (new BorderLayout ());
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/BorderLayoutBuilder.java" startline="26" endline="29">
public BorderLayoutBuilder setNorthMember (Canvas canvas) {
    instance ().setNorthMember (canvas);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/BorderLayoutBuilder.java" startline="34" endline="37">
public BorderLayoutBuilder setSouthMember (Canvas canvas) {
    instance ().setSouthMember (canvas);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/BorderLayoutBuilder.java" startline="42" endline="45">
public BorderLayoutBuilder setWestMember (Canvas canvas) {
    instance ().setWestMember (canvas);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/BorderLayoutBuilder.java" startline="50" endline="53">
public BorderLayoutBuilder setEastMember (Canvas canvas) {
    instance ().setEastMember (canvas);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/BorderLayoutBuilder.java" startline="58" endline="61">
public BorderLayoutBuilder setCenterMember (Canvas canvas) {
    instance ().setCenterMember (canvas);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/BorderLayoutBuilder.java" startline="64" endline="66">
protected BorderLayoutBuilder me () {
    return this;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="21" endline="24">
public B setWidth (int width) {
    instance ().setWidth (width);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="29" endline="32">
public B setWidth (String width) {
    instance ().setWidth (width);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="37" endline="40">
public B setMinWidth (int minWidth) {
    instance ().setMinWidth (minWidth);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="45" endline="48">
public B setAutoWidth () {
    instance ().setAutoWidth ();
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="53" endline="56">
public B setHeight (int height) {
    instance ().setHeight (height);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="61" endline="64">
public B setHeight (String height) {
    instance ().setHeight (height);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="69" endline="72">
public B setMinHeight (int minHeight) {
    instance ().setMinHeight (minHeight);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="77" endline="80">
public B setAutoHeight () {
    instance ().setAutoHeight ();
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="85" endline="88">
public B setBackgroundColor (String backgroundColor) {
    instance ().setBackgroundColor (backgroundColor);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="93" endline="96">
public B setAlign (Alignment align) {
    instance ().setAlign (align);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="101" endline="104">
public B setLayoutAlign (Alignment layoutAlign) {
    instance ().setLayoutAlign (layoutAlign);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="109" endline="112">
public B setStyleName (String styleName) {
    instance ().setStyleName (styleName);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="117" endline="120">
public B setShowEdges (Boolean showEdges) {
    instance ().setShowEdges (showEdges);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="125" endline="128">
public B setPadding (Integer padding) {
    instance ().setPadding (padding);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="133" endline="136">
public B setResizeBarVisible (Boolean showResizeBar) {
    instance ().setShowResizeBar (showResizeBar);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="141" endline="144">
public B setResizeBarTarget (String resizeBarTarget) {
    instance ().setResizeBarTarget (resizeBarTarget);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/builder/CanvasBuilder.java" startline="149" endline="152">
public B setOverflow (Overflow overflow) {
    instance ().setOverflow (overflow);
    return me ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Canvas.java" startline="3579" endline="3587">
public HandlerRegistration addClickHandler (final ClickHandler handler) {
    clickHandlers.add (handler);
    return new HandlerRegistration () {
        @Override
        public void removeHandler () {
            clickHandlers.remove (handler);
        }}

    ;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Canvas.java" startline="3583" endline="3585">
public void removeHandler () {
    clickHandlers.remove (handler);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Canvas.java" startline="3880" endline="3883">
public void setDisabled (boolean disabled) {
    setAttribute ("b$disabled", disabled);
    requestRepaint ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Canvas.java" startline="3894" endline="3897">
public boolean getDisabled () {
    Boolean disabled = getAttributeAsBoolean ("b$disabled");
    return disabled == null ? false : disabled;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Canvas.java" startline="3900" endline="3902">
public boolean isEnabled () {
    return ! getDisabled ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Canvas.java" startline="3905" endline="3907">
public void setEnabled (boolean enabled) {
    setDisabled (! enabled);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Canvas.java" startline="4084" endline="4090">
public void paintContent (PaintTarget target) throws PaintException {
    super.paintContent (target);
    if (! clickHandlers.isEmpty ()) {
        target.addAttribute ("*hasClickHandlers", true);
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/Canvas.java" startline="4093" endline="4103">
public void changeVariables (Object source, Map < String, Object > variables) {
    super.changeVariables (source, variables);
    if (variables.containsKey ("clickEvent")) {
        final ClickEvent event = new ClickEvent ();
        for (ClickHandler handler : clickHandlers) {
            handler.onClick (event);
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7392" endline="7400">
public HandlerRegistration addRecordDoubleClickHandler (final RecordDoubleClickHandler handler) {
    recordDoubleClickHandlers.add (handler);
    return new HandlerRegistration () {
        @Override
        public void removeHandler () {
            recordDoubleClickHandlers.remove (handler);
        }}

    ;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7396" endline="7398">
public void removeHandler () {
    recordDoubleClickHandlers.remove (handler);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7402" endline="7404">
public Set < SelectionChangedHandler > getSelectionChangedHandlers () {
    return Sets.newHashSet (selectionChangedHandlers);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7407" endline="7415">
public HandlerRegistration addSelectionChangedHandler (final SelectionChangedHandler handler) {
    selectionChangedHandlers.add (handler);
    return new HandlerRegistration () {
        @Override
        public void removeHandler () {
            selectionChangedHandlers.remove (handler);
        }}

    ;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7411" endline="7413">
public void removeHandler () {
    selectionChangedHandlers.remove (handler);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7417" endline="7419">
public Set < SelectionUpdatedHandler > getSelectionUpdatedHandlers () {
    return Sets.newHashSet (selectionUpdatedHandlers);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7422" endline="7430">
public HandlerRegistration addSelectionUpdatedHandler (final SelectionUpdatedHandler handler) {
    selectionUpdatedHandlers.add (handler);
    return new HandlerRegistration () {
        @Override
        public void removeHandler () {
            selectionUpdatedHandlers.remove (handler);
        }}

    ;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7426" endline="7428">
public void removeHandler () {
    selectionUpdatedHandlers.remove (handler);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7904" endline="7906">
public ListGridRecord [] getSelectedRecords () {
    return selectedRecords;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7926" endline="7932">
public SelectionEventFactory getSelectionEventFactory () {
    if (selectionEventFactory == null) {
        return selectionEventFactory = InjectorSingleton.get ().getInstance (SelectionEventFactory.class);
    } else {
        return selectionEventFactory;
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7934" endline="7936">
public void setSelectionEventFactory (SelectionEventFactory selectionEventFactory) {
    this.selectionEventFactory = selectionEventFactory;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7938" endline="7944">
public RecordFactory getRecordFactory () {
    if (recordFactory == null) {
        return recordFactory = InjectorSingleton.get ().getInstance (RecordFactory.class);
    } else {
        return recordFactory;
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7946" endline="7948">
public void setRecordFactory (RecordFactory recordFactory) {
    this.recordFactory = recordFactory;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7958" endline="7960">
public void setListGridRecordFactory (ListGridRecordFactory listGridRecordFactory) {
    this.listGridRecordFactory = listGridRecordFactory;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7963" endline="7983">
public void paintContent (PaintTarget target) throws PaintException {
    propertyPainter.paintContent (target);
    if (dataSource != null) {
        target.addAttribute ("dataSource", dataSource);
    }
    if (! selectionChangedHandlers.isEmpty ()) {
        target.addAttribute ("*hasSelectionChangedHandlers", true);
    }
    if (! selectionUpdatedHandlers.isEmpty ()) {
        target.addAttribute ("*hasSelectionUpdatedHandlers", true);
    }
    if (! recordDoubleClickHandlers.isEmpty ()) {
        target.addAttribute ("*hasRecordDoubleClickHandlers", true);
    }
    super.paintContent (target);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="7986" endline="8035">
public void changeVariables (Object source, Map < String, Object > variables) {
    if (variables.containsKey ("selectedRecords")) {
        try {
            final JsonRootNode node = new JdomParser ().parse ((String) variables.get ("selectedRecords"));
            selectedRecords = getListGridRecordFactory ().newListGridRecords (node.getArrayNode ());
        } catch (Exception e) {
            Throwables.propagate (e);
        }
    }
    if (variables.containsKey ("onSelectionChanged.event")) {
        try {
            final JsonRootNode root = new JdomParser ().parse ((String) variables.get ("onSelectionChanged.event"));
            final SelectionEvent event = getSelectionEventFactory ().newSelectionEvent (root);
            for (SelectionChangedHandler handler : selectionChangedHandlers) {
                handler.onSelectionChanged (event);
            }
        } catch (Exception e) {
            Throwables.propagate (e);
        }
    }
    if (variables.containsKey ("onSelectionUpdated.event")) {
        final SelectionUpdatedEvent event = new SelectionUpdatedEvent (this);
        for (SelectionUpdatedHandler handler : selectionUpdatedHandlers) {
            handler.onSelectionUpdated (event);
        }
    }
    if (variables.containsKey ("onRecordDoubleClick")) {
        try {
            final JsonRootNode root = new JdomParser ().parse ((String) variables.get ("onRecordDoubleClick.event.record"));
            final Record record = getRecordFactory ().newRecord (root);
            final int recordNum = (Integer) variables.get ("onRecordDoubleClick.event.recordNum");
            final ListGridField field = (ListGridField) variables.get ("onRecordDoubleClick.event.field");
            final int fieldNum = (Integer) variables.get ("onRecordDoubleClick.event.fieldNum");
            final RecordDoubleClickEvent event = new RecordDoubleClickEvent (this, this, record, recordNum, field, fieldNum);
            for (RecordDoubleClickHandler handler : recordDoubleClickHandlers) {
                handler.onRecordDoubleClick (event);
            }
        } catch (Exception e) {
            Throwables.propagate (e);
        }
    }
    super.changeVariables (source, variables);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGrid.java" startline="8037" endline="8043">
protected void fireEvent (com.google.web.bindery.event.shared.Event < ? > event) {
    if (event instanceof RecordDoubleClickEvent) {
        for (RecordDoubleClickHandler handler : recordDoubleClickHandlers) {
            handler.onRecordDoubleClick ((RecordDoubleClickEvent) event);
        }
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionUpdatedEvent.java" startline="24" endline="26">
public static Type < SelectionUpdatedHandler > getType () {
    return TYPE == null ? TYPE = new Type < SelectionUpdatedHandler > () : TYPE;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionUpdatedEvent.java" startline="33" endline="35">
public Type < SelectionUpdatedHandler > getAssociatedType () {
    return getType ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionUpdatedEvent.java" startline="38" endline="40">
protected void dispatch (SelectionUpdatedHandler handler) {
    handler.onSelectionUpdated (this);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionUpdatedEvent.java" startline="53" endline="55">
public int hashCode () {
    return Objects.hashCode (getSource ());
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/RecordDoubleClickEvent.java" startline="34" endline="36">
public static Type < RecordDoubleClickHandler > getType () {
    return TYPE == null ? TYPE = new Event.Type < RecordDoubleClickHandler > () : TYPE;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/RecordDoubleClickEvent.java" startline="54" endline="56">
public Event.Type < RecordDoubleClickHandler > getAssociatedType () {
    return getType ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/RecordDoubleClickEvent.java" startline="63" endline="65">
public ListGrid getViewer () {
    return viewer;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/RecordDoubleClickEvent.java" startline="72" endline="74">
public Record getRecord () {
    return record;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/RecordDoubleClickEvent.java" startline="81" endline="83">
public int getRecordNum () {
    return recordNum;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/RecordDoubleClickEvent.java" startline="90" endline="92">
public ListGridField getField () {
    return field;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/RecordDoubleClickEvent.java" startline="99" endline="101">
public int getFieldNum () {
    return fieldNum;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/RecordDoubleClickEvent.java" startline="104" endline="106">
protected void dispatch (RecordDoubleClickHandler handler) {
    handler.onRecordDoubleClick (this);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/RecordDoubleClickEvent.java" startline="126" endline="128">
public int hashCode () {
    return Objects.hashCode (getSource (), viewer, record, recordNum, field, fieldNum);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionEvent.java" startline="32" endline="34">
public static Event.Type < SelectionChangedHandler > getType () {
    return TYPE == null ? TYPE = new Event.Type < SelectionChangedHandler > () : TYPE;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionEvent.java" startline="49" endline="51">
public Event.Type < SelectionChangedHandler > getAssociatedType () {
    return getType ();
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionEvent.java" startline="54" endline="56">
protected void dispatch (SelectionChangedHandler handler) {
    handler.onSelectionChanged (this);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionEvent.java" startline="63" endline="65">
public Record getRecord () {
    return record;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionEvent.java" startline="72" endline="74">
public boolean getState () {
    return state;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionEvent.java" startline="81" endline="83">
public ListGridRecord [] getSelection () {
    return selection;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/events/SelectionEvent.java" startline="93" endline="95">
public ListGridRecord getSelectedRecord () {
    return selectedRecord;
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/SelectionEventFactory.java" startline="30" endline="36">
public SelectionEvent newSelectionEvent (JsonNode node) {
    final Record record = recordFactory.newRecord (node.getNode ("record"));
    final boolean state = node.getBooleanValue ("state");
    final ListGridRecord [] selection = listGridRecordFactory.newListGridRecords (node.getArrayNode ("selection"));
    final ListGridRecord selectedRecord = listGridRecordFactory.newListGridRecord (node.getNode ("selectedRecord"));
    return new SelectionEvent (record, state, selection, selectedRecord);
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGridRecordFactory.java" startline="28" endline="36">
public ListGridRecord newListGridRecord (JsonNode node) {
    if (! node.isNullNode ()) {
        final ListGridRecord record = new ListGridRecord ();
        updater.update (record, node);
        return record;
    } else {
        return null;
    }
}
</source>
<source file="projects/systems/360-Innovations_VaadinSmartGWT/VaadinSmartGWT/org.vaadin.smartgwt/src/main/java/org/vaadin/smartgwt/server/grid/ListGridRecordFactory.java" startline="44" endline="50">
public ListGridRecord [] newListGridRecords (List < JsonNode > nodes) {
    final ListGridRecord [] records = new ListGridRecord [nodes.size ()];
    for (int i = 0;
    i < records.length; i ++) {
        records [i] = newListGridRecord (nodes.get (i));
    }
    return records;
}
</source>
<source file="projects/systems/0xCopy_RelaxFactory/RelaxFactory/rxf-core/src/main/java/rxf/core/DateHeaderParser.java" startline="63" endline="86">
public static Date parseDate (CharSequence dateValue) {
    char c = dateValue.charAt (0);
    switch (c) {
        case '\'' :
        case '"' :
            dateValue = dateValue.subSequence (1, dateValue.length () - 1);
        default :
            break;
    }
    String source = dateValue.toString ();
    for (DateHeaderParser dateHeaderParser : values ()) {
        try {
            return dateHeaderParser.format.parse (source);
        } catch (ParseException e) {
            if (false) {
                System.err.println (".--" + dateHeaderParser.name () + " failed parse: " + source);
            }
        }
    }
    return null;
}
</source>
<source file="projects/systems/0xCopy_RelaxFactory/RelaxFactory/rxf-guice/src/main/java/rxf/couch/guice/CouchServiceProvider.java" startline="21" endline="32">
public T get () {
    try {
        return CouchServiceFactory.get (type, namespace);
    } catch (InterruptedException e) {
        e.printStackTrace ();
    } catch (ExecutionException e) {
        e.printStackTrace ();
    }
    return null;
}
</source>
<source file="projects/systems/0xCopy_RelaxFactory/RelaxFactory/rxf-couch/src/main/java/rxf/couch/CouchService.java" startline="63" endline="71">
public CouchTx addAttachment (String content, String fileName, String contentType) {
    JsonSendActionBuilder actionBuilder = new JsonSend ().opaque (db + "/" + id + "/" + fileName + "?rev=" + rev).validjson (content).to ();
    actionBuilder.hdr ().headerString (HttpHeaders.Content$2dType, contentType);
    CouchTx tx = actionBuilder.fire ().tx ();
    rev = tx.rev ();
    return tx;
}
</source>
<source file="projects/systems/0xCopy_RelaxFactory/RelaxFactory/rxf-couch/src/main/java/rxf/couch/CouchService.java" startline="73" endline="88">
public Writer addAttachment (final String fileName, final String contentType) {
    return new StringWriter () {
        public void close () throws IOException {
            JsonSendActionBuilder actionBuilder = new JsonSend ().opaque (db + "/" + id + "/" + fileName + "?rev=" + rev).validjson (getBuffer ().toString ()).to ();
            actionBuilder.hdr ().headerString (HttpHeaders.Content$2dType, contentType);
            CouchTx tx = actionBuilder.fire ().tx ();
            if (! tx.ok ()) {
                throw new IOException (tx.error ());
            }
            rev = tx.rev ();
        }}

    ;
}
</source>
<source file="projects/systems/0xCopy_RelaxFactory/RelaxFactory/rxf-couch/src/main/java/rxf/couch/CouchService.java" startline="76" endline="86">
public void close () throws IOException {
    JsonSendActionBuilder actionBuilder = new JsonSend ().opaque (db + "/" + id + "/" + fileName + "?rev=" + rev).validjson (getBuffer ().toString ()).to ();
    actionBuilder.hdr ().headerString (HttpHeaders.Content$2dType, contentType);
    CouchTx tx = actionBuilder.fire ().tx ();
    if (! tx.ok ()) {
        throw new IOException (tx.error ());
    }
    rev = tx.rev ();
}
</source>
<source file="projects/systems/0xCopy_RelaxFactory/RelaxFactory/rxf-couch/src/main/java/rxf/couch/CouchService.java" startline="90" endline="98">
public CouchTx updateAttachment (String content, String fileName, String contentType) {
    JsonSendActionBuilder actionBuilder = new JsonSend ().opaque (db + "/" + id + "/" + fileName + "?rev=" + rev).validjson (content).to ();
    actionBuilder.hdr ().headerString (HttpHeaders.Content$2dType, contentType);
    CouchTx tx = actionBuilder.fire ().tx ();
    rev = tx.rev ();
    return tx;
}
</source>
<source file="projects/systems/0xCopy_RelaxFactory/RelaxFactory/rxf-couch/src/main/java/rxf/couch/CouchService.java" startline="100" endline="115">
public Writer updateAttachment (final String fileName, final String contentType) {
    return new StringWriter () {
        public void close () throws IOException {
            JsonSendActionBuilder actionBuilder = new JsonSend ().opaque (db + "/" + id + "/" + fileName + "?rev=" + rev).validjson (getBuffer ().toString ()).to ();
            actionBuilder.hdr ().headerString (HttpHeaders.Content$2dType, contentType);
            CouchTx tx = actionBuilder.fire ().tx ();
            if (! tx.ok ()) {
                throw new IOException (tx.error ());
            }
            rev = tx.rev ();
        }}

    ;
}
</source>
<source file="projects/systems/0xCopy_RelaxFactory/RelaxFactory/rxf-couch/src/main/java/rxf/couch/CouchService.java" startline="103" endline="113">
public void close () throws IOException {
    JsonSendActionBuilder actionBuilder = new JsonSend ().opaque (db + "/" + id + "/" + fileName + "?rev=" + rev).validjson (getBuffer ().toString ()).to ();
    actionBuilder.hdr ().headerString (HttpHeaders.Content$2dType, contentType);
    CouchTx tx = actionBuilder.fire ().tx ();
    if (! tx.ok ()) {
        throw new IOException (tx.error ());
    }
    rev = tx.rev ();
}
</source>
<source file="projects/systems/0xCopy_RelaxFactory/RelaxFactory/rxf-couch/src/main/java/rxf/couch/CouchService.java" startline="117" endline="119">
public String getAttachment (String fileName) {
    return new DocFetch ().db (db).docId (id + "/" + fileName).to ().fire ().json ();
}
</source>
<source file="projects/systems/13leaf_AndroidPackageTool/AndroidPackageTool/src/tools/Files.java" startline="38" endline="58">
public static boolean deleteDir (File dir) {
    if (null == dir || ! dir.exists ()) return false;

    if (! dir.isDirectory ()) throw new RuntimeException ("\"" + dir.getAbsolutePath () + "\" should be a directory!");

    File [] files = dir.listFiles ();
    boolean re = false;
    if (null != files) {
        if (files.length == 0) return dir.delete ();

        for (File f : files) {
            if (f.isDirectory ()) re |= deleteDir (f);
            else re |= f.delete ();

        }
        re |= dir.delete ();
    }
    return re;
}
</source>
<source file="projects/systems/13leaf_AndroidPackageTool/AndroidPackageTool/src/tools/Files.java" startline="253" endline="264">
public static String toRelativePath (File original, File target) throws IOException {
    String relativePath = "";
    String originalPath = original.getCanonicalPath ();
    String targetPath = target.getCanonicalPath ();
    String publicDir = getParentDir (originalPath, targetPath);
    if (null == publicDir) throw new IOException (String.format ("original:%s\ntarget:%s have no public directory!", originalPath, targetPath));

    if (originalPath.equals (publicDir)) return "." + targetPath.substring (publicDir.length (), targetPath.length ());

    relativePath = toParentRelative (originalPath, publicDir);
    return "." + relativePath + targetPath.substring (publicDir.length (), targetPath.length ());
}
</source>
<source file="projects/systems/13leaf_AndroidPackageTool/AndroidPackageTool/src/tools/Files.java" startline="279" endline="296">
public static String getParentDir (String path1, String path2) throws IOException {
    if (path1.contains (".") || path2.contains (".")) {
        path1 = new File (path1).getCanonicalPath ();
        path2 = new File (path2).getCanonicalPath ();
    }
    char [] originalChars = path1.toCharArray ();
    char [] targetChars = path2.toCharArray ();
    int i = - 1;
    while (++ i < originalChars.length && i < targetChars.length) {
        if (originalChars [i] != targetChars [i]) {
            -- i;
            break;
        }
    }
    if (i == - 1) return null;
    else return path2.substring (0, i);

}
</source>
<source file="projects/systems/1000Memories_photon-core/photon-core/src/main/java/com/thousandmemories/photon/core/PhotoResource.java" startline="41" endline="103">
public Response getPhoto (@PathParam ("name")
String name,@MatrixParam ("w")
Integer width,@MatrixParam ("r")
RotationParam rotateAngle,@MatrixParam ("c")
RectangleParam crop) throws Exception {
    InputStream resultStream;
    InputStream imageStream;
    try {
        imageStream = new BufferedInputStream (photoProvider.getPhotoInputStream (name));
    } catch (FileNotFoundException fnfe) {
        throw new WebApplicationException (Response.Status.NOT_FOUND);
    }
    String mimeType = URLConnection.guessContentTypeFromStream (imageStream);
    if (mimeType == null) {
        throw new WebApplicationException (501);
    }
    if (width != null || rotateAngle != null || crop != null) {
        BufferedImage image;
        TimerContext readContext = readTimer.time ();
        try {
            image = ImageIO.read (imageStream);
        } finally {
            imageStream.close ();
            readContext.stop ();
        }
        if (crop != null) {
            image = com.thousandmemories.photon.core.Processor.crop (image, crop.get ());
        }
        if (rotateAngle != null) {
            image = com.thousandmemories.photon.core.Processor.rotate (image, rotateAngle.get ());
        }
        if (width != null) {
            image = com.thousandmemories.photon.core.Processor.fitToWidth (image, width);
        }
        Iterator < ImageWriter > i = ImageIO.getImageWritersByMIMEType (mimeType);
        if (! i.hasNext ()) {
            mimeType = "image/jpeg";
            i = ImageIO.getImageWritersByMIMEType (mimeType);
        }
        ImageWriter writer = i.next ();
        ByteArrayOutputStream os = new ByteArrayOutputStream ();
        writer.setOutput (new MemoryCacheImageOutputStream (os));
        writer.write (image);
        image.flush ();
        image = null;
        resultStream = new ByteArrayInputStream (os.toByteArray ());
    } else {
        resultStream = imageStream;
    }
    return Response.ok (resultStream, mimeType).build ();
}
</source>
<source file="projects/systems/a.java" startline="1" endline="10">
public Character convertToCharacter (Object obj) {
    String str = obj.toString ();
    if (str.length () > 1) {
        str = str.replaceFirst ("\"", "");
    }
    if (! str.equals (null) && ! str.equals ("")) {
        return new Character (str.charAt (0));
    }
    return new Character ('\0');
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="35" endline="37">
public static URI createAbsoluteURI (URI base, String uri) throws IllegalArgumentException {
    return createAbsoluteURI (base, URI.create (uri));
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="39" endline="56">
public static URI createAbsoluteURI (URI base, URI relativeOrNot) throws IllegalArgumentException {
    if (base == null && ! relativeOrNot.isAbsolute ()) {
        throw new IllegalArgumentException ("Base URI is null and given URI is not absolute");
    } else if (base == null && relativeOrNot.isAbsolute ()) {
        return relativeOrNot;
    } else {
        assert base != null;
        if (base.getPath ().length () == 0) {
            try {
                base = new URI (base.getScheme (), base.getAuthority (), "/", base.getQuery (), base.getFragment ());
            } catch (Exception ex) {
                throw new IllegalArgumentException (ex);
            }
        }
        return base.resolve (relativeOrNot);
    }

}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="58" endline="60">
public static URL createAbsoluteURL (URL base, String uri) throws IllegalArgumentException {
    return createAbsoluteURL (base, URI.create (uri));
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="62" endline="84">
public static URL createAbsoluteURL (URL base, URI relativeOrNot) throws IllegalArgumentException {
    if (base == null && ! relativeOrNot.isAbsolute ()) {
        throw new IllegalArgumentException ("Base URL is null and given URI is not absolute");
    } else if (base == null && relativeOrNot.isAbsolute ()) {
        try {
            return relativeOrNot.toURL ();
        } catch (Exception ex) {
            throw new IllegalArgumentException ("Base URL was null and given URI can't be converted to URL");
        }
    } else {
        try {
            assert base != null;
            URI baseURI = base.toURI ();
            URI absoluteURI = createAbsoluteURI (baseURI, relativeOrNot);
            return absoluteURI.toURL ();
        } catch (Exception ex) {
            throw new IllegalArgumentException ("Base URL is not an URI, or can't create absolute URI (null?), " + "or absolute URI can not be converted to URL", ex);
        }
    }

}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="86" endline="92">
public static URL createAbsoluteURL (URI base, URI relativeOrNot) throws IllegalArgumentException {
    try {
        return createAbsoluteURI (base, relativeOrNot).toURL ();
    } catch (Exception ex) {
        throw new IllegalArgumentException ("Absolute URI can not be converted to URL", ex);
    }
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="94" endline="106">
public static URL createAbsoluteURL (InetAddress address, int localStreamPort, URI relativeOrNot) throws IllegalArgumentException {
    try {
        if (address instanceof Inet6Address) {
            return createAbsoluteURL (new URL ("http://[" + address.getHostAddress () + "]:" + localStreamPort), relativeOrNot);
        } else if (address instanceof Inet4Address) {
            return createAbsoluteURL (new URL ("http://" + address.getHostAddress () + ":" + localStreamPort), relativeOrNot);
        } else {
            throw new IllegalArgumentException ("InetAddress is neither IPv4 nor IPv6: " + address);
        }

    } catch (Exception ex) {
        throw new IllegalArgumentException ("Address, port, and URI can not be converted to URL", ex);
    }
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="268" endline="270">
public static String encodePathSegment (final String pathSegment) {
    return encode (PATH_SEGMENT, pathSegment, "UTF-8");
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="272" endline="274">
public static String encodePathParamName (final String pathParamName) {
    return encode (PATH_PARAM_NAME, pathParamName, "UTF-8");
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="276" endline="278">
public static String encodePathParamValue (final String pathParamValue) {
    return encode (PATH_PARAM_VALUE, pathParamValue, "UTF-8");
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="280" endline="282">
public static String encodeQueryNameOrValue (final String queryNameOrValue) {
    return encode (QUERY, queryNameOrValue, "UTF-8");
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/URIUtil.java" startline="288" endline="307">
public static String encode (BitSet allowedCharacters, String s, String charset) {
    if (s == null) return null;

    final StringBuilder encoded = new StringBuilder (s.length () * 3);
    final char [] characters = s.toCharArray ();
    try {
        for (char c : characters) {
            if (allowedCharacters.get (c)) {
                encoded.append (c);
            } else {
                byte [] bytes = String.valueOf (c).getBytes (charset);
                for (byte b : bytes) encoded.append (String.format ("%%%1$02X", b & 0xFF));

            }
        }
    } catch (Exception ex) {
        throw new RuntimeException (ex);
    }
    return encoded.toString ();
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/MimeType.java" startline="60" endline="62">
public String getType () {
    return this.type;
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/MimeType.java" startline="68" endline="70">
public String getSubtype () {
    return this.subtype;
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/MimeType.java" startline="76" endline="78">
public Map < String, String > getParameters () {
    return parameters;
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/MimeType.java" startline="91" endline="131">
public static MimeType valueOf (String stringValue) throws IllegalArgumentException {
    if (stringValue == null) throw new IllegalArgumentException ("String value is null");

    String params = null;
    int semicolonIndex = stringValue.indexOf (";");
    if (semicolonIndex > - 1) {
        params = stringValue.substring (semicolonIndex + 1).trim ();
        stringValue = stringValue.substring (0, semicolonIndex);
    }
    String major = null;
    String subtype = null;
    String [] paths = stringValue.split ("/");
    if (paths.length < 2 && stringValue.equals (WILDCARD)) {
        major = WILDCARD;
        subtype = WILDCARD;
    } else if (paths.length == 2) {
        major = paths [0].trim ();
        subtype = paths [1].trim ();
    } else if (paths.length != 2) {
        throw new IllegalArgumentException ("Error parsing string: " + stringValue);
    }

    if (params != null && params.length () > 0) {
        HashMap < String, String > map = new HashMap ();
        int start = 0;
        while (start < params.length ()) {
            start = readParamsIntoMap (map, params, start);
        }
        return new MimeType (major, subtype, map);
    } else {
        return new MimeType (major, subtype);
    }
}
</source>
<source file="projects/systems/4thline_seamless/seamless/util/src/main/java/org/seamless/util/MimeType.java" startline="218" endline="227">
public String toString () {
    StringBuilder sb = new StringBuilder ();
    sb.append (toStringNoParameters ());
    if (getParameters () != null || getParameters ().size () > 0) {
        for (String name : getParameters ().keySet ()) {
            sb.append (";").append (name).append ("=\"").append (getParameters ().get (name)).append ("\"");
        }
    }
    return sb.toString ();
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Headers.java" startline="98" endline="100">
public List < String > get (Object key) {
    return map.get (normalize ((String) key));
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Headers.java" startline="186" endline="188">
public static String readLine (ByteArrayInputStream is) {
    return readLine (new StringBuilder (256), is);
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Headers.java" startline="190" endline="206">
public static String readLine (StringBuilder sb, ByteArrayInputStream is) {
    int nextByte;
    while ((nextByte = is.read ()) != - 1) {
        char nextChar = (char) nextByte;
        if (nextChar == CR) {
            nextByte = (char) is.read ();
            if (nextByte == LF) {
                break;
            }
        } else if (nextChar == LF) {
            break;
        }

        sb.append (nextChar);
    }
    return sb.toString ();
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Query.java" startline="93" endline="102">
public String get (String name) {
    List < String > values = parameters.get (name);
    if (values == null) return "";

    if (values.size () == 0) return "";

    return values.get (0);
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Query.java" startline="104" endline="110">
public String [] getValues (String name) {
    List < String > values = parameters.get (name);
    if (values == null) return null;

    return values.toArray (new String [values.size ()]);
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Query.java" startline="112" endline="116">
public List < String > getValuesAsList (String name) {
    return parameters.containsKey (name) ? Collections.unmodifiableList (parameters.get (name)) : null;
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Query.java" startline="122" endline="134">
public Map < String, String [] > getMap () {
    Map < String, String [] > map = new TreeMap < String, String [] > ();
    for (Map.Entry < String, List < String > > entry : parameters.entrySet ()) {
        List < String > list = entry.getValue ();
        String [] values;
        if (list == null) values = null;
        else values = list.toArray (new String [list.size ()]);

        map.put (entry.getKey (), values);
    }
    return map;
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Query.java" startline="136" endline="138">
public Map < String, List < String > > getMapWithLists () {
    return Collections.unmodifiableMap (parameters);
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Query.java" startline="140" endline="142">
public boolean isEmpty () {
    return parameters.size () == 0;
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Query.java" startline="144" endline="153">
public Query cloneAndAdd (String name, String...values) {
    Map < String, List < String > > params = new HashMap (getMapWithLists ());
    List < String > existingValues = params.get (name);
    if (existingValues == null) {
        existingValues = new ArrayList < String > ();
        params.put (name, existingValues);
    }
    existingValues.addAll (Arrays.asList (values));
    return Query.newInstance (params);
}
</source>
<source file="projects/systems/4thline_seamless/seamless/http/src/main/java/org/seamless/http/Query.java" startline="156" endline="168">
public String toString () {
    StringBuilder sb = new StringBuilder ();
    for (Map.Entry < String, List < String > > entry : parameters.entrySet ()) {
        for (String v : entry.getValue ()) {
            if (v == null || v.length () == 0) continue;

            if (sb.length () > 0) sb.append ("&");

            sb.append (entry.getKey ());
            sb.append ("=");
            sb.append (v);
        }
    }
    return sb.toString ();
}
</source>
<source file="projects/systems/4thline_seamless/seamless/javadoc/src/main/java/org/seamless/javadoc/EasyDoclet.java" startline="208" endline="210">
public RootDoc getRootDoc () {
    return rootDoc;
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedisCluster.java" startline="28" endline="30">
public String set (final String key, final String value) {
    return client.set (key, value);
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedisCluster.java" startline="33" endline="35">
public String set (final String key, final String value, final String nxxx, final String expx, final long time) {
    return client.set (key, value, nxxx, expx, time);
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedisCluster.java" startline="38" endline="40">
public String get (final String key) {
    return client.get (key);
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedisPool.java" startline="15" endline="20">
public Jedis getResource () {
    if (client == null) {
        client = new MockJedis ("localhost");
    }
    return client;
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedisPool.java" startline="23" endline="25">
public void returnResource (final Jedis resource) {
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="98" endline="100">
public byte [] get (final byte [] key) {
    return pipeline.get (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="123" endline="125">
public Long del (final byte []...keys) {
    return pipeline.del (keys).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="133" endline="135">
public Set < byte [] > keys (final byte [] pattern) {
    return pipeline.keys (pattern).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="163" endline="165">
public Long incrBy (final byte [] key, final long integer) {
    return pipeline.incrBy (key, integer).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="168" endline="170">
public Double incrByFloat (final String key, final double integer) {
    return pipeline.incrByFloat (key, integer).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="173" endline="175">
public Double incrByFloat (final byte [] key, final double integer) {
    return pipeline.incrByFloat (key, integer).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="188" endline="190">
public Long incr (final byte [] key) {
    return pipeline.incr (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="203" endline="205">
public List < String > sort (final String key) {
    return pipeline.sort (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="208" endline="210">
public List < byte [] > sort (final byte [] key) {
    return pipeline.sort (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="213" endline="215">
public Long sort (final String key, final String dstkey) {
    return pipeline.sort (key, dstkey).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="218" endline="220">
public Long sort (final byte [] key, final byte [] dstkey) {
    return pipeline.sort (key, dstkey).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="223" endline="225">
public List < String > sort (final String key, final SortingParams sortingParameters) {
    return pipeline.sort (key, sortingParameters).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="228" endline="230">
public List < byte [] > sort (final byte [] key, final SortingParams sortingParameters) {
    return pipeline.sort (key, sortingParameters).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="233" endline="235">
public Long sort (final String key, final SortingParams sortingParameters, final String dstkey) {
    return pipeline.sort (key, sortingParameters, dstkey).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="238" endline="240">
public Long sort (final byte [] key, final SortingParams sortingParameters, final byte [] dstkey) {
    return pipeline.sort (key, sortingParameters, dstkey).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="243" endline="245">
public Long hset (final byte [] key, final byte [] field, final byte [] value) {
    return pipeline.hset (key, field, value).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="248" endline="250">
public byte [] hget (final byte [] key, final byte [] field) {
    return pipeline.hget (key, field).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="263" endline="265">
public Long hincrBy (final byte [] key, final byte [] field, final long value) {
    return pipeline.hincrBy (key, field, value).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="268" endline="270">
public Boolean hexists (final byte [] key, final byte [] field) {
    return pipeline.hexists (key, field).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="273" endline="275">
public Long hdel (final byte [] key, final byte []...fields) {
    return pipeline.hdel (key, fields).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="278" endline="280">
public Long hlen (final byte [] key) {
    return pipeline.hlen (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="283" endline="285">
public Set < byte [] > hkeys (final byte [] key) {
    return pipeline.hkeys (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="288" endline="290">
public List < byte [] > hvals (final byte [] key) {
    return pipeline.hvals (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="293" endline="295">
public Map < byte [], byte [] > hgetAll (final byte [] key) {
    return pipeline.hgetAll (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="303" endline="305">
public Long dbSize () {
    return pipeline.dbSize ().get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="318" endline="320">
public Long move (final String key, final int dbIndex) {
    return pipeline.move (key, dbIndex).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="323" endline="325">
public Long move (final byte [] key, final int dbIndex) {
    return pipeline.move (key, dbIndex).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="328" endline="330">
public String select (final int dbIndex) {
    return pipeline.select (dbIndex).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="333" endline="335">
public String set (final String key, final String value) {
    return pipeline.set (key, value).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="338" endline="340">
public String set (final byte [] key, final byte [] value) {
    return pipeline.set (key, value).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="353" endline="355">
public String get (final String key) {
    return pipeline.get (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="403" endline="405">
public String set (final String key, final String value, final String nxxx) {
    return pipeline.set (key, value, nxxx).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="408" endline="410">
public String set (final String key, final String value, final String nxxx, final String expx, final int time) {
    return pipeline.set (key, value, nxxx, expx, time).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="468" endline="470">
public Boolean exists (final String key) {
    return pipeline.exists (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="473" endline="475">
public Boolean exists (final byte [] key) {
    return pipeline.exists (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="478" endline="480">
public Long incr (final String key) {
    return pipeline.incr (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="483" endline="485">
public Long incrBy (final String key, final long integer) {
    return pipeline.incrBy (key, integer).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="498" endline="500">
public Long del (final String...keys) {
    return pipeline.del (keys).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="503" endline="505">
public Long del (final String key) {
    return pipeline.del (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="508" endline="510">
public Long del (final byte [] key) {
    return pipeline.del (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="513" endline="515">
public Long hset (final String key, final String field, final String value) {
    return pipeline.hset (key, field, value).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="528" endline="530">
public String hget (final String key, final String field) {
    return pipeline.hget (key, field).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="533" endline="535">
public Map < String, String > hgetAll (final String key) {
    return pipeline.hgetAll (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="538" endline="540">
public Set < String > hkeys (final String key) {
    return pipeline.hkeys (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="543" endline="545">
public List < String > hvals (final String key) {
    return pipeline.hvals (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="558" endline="560">
public Long hincrBy (final String key, final String field, final long value) {
    return pipeline.hincrBy (key, field, value).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="563" endline="565">
public Double hincrByFloat (final String key, final String field, final double value) {
    return pipeline.hincrByFloat (key, field, value).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="568" endline="570">
public Long hdel (final String key, final String...fields) {
    return pipeline.hdel (key, fields).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="573" endline="575">
public Boolean hexists (final String key, final String field) {
    return pipeline.hexists (key, field).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="578" endline="580">
public Long hlen (final String key) {
    return pipeline.hlen (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="583" endline="585">
public Long lpush (final String key, final String...strings) {
    return pipeline.lpush (key, strings).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="588" endline="590">
public Long lpush (final byte [] key, final byte []...strings) {
    return pipeline.lpush (key, strings).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="593" endline="595">
public Long sadd (final String key, final String...members) {
    return pipeline.sadd (key, members).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="598" endline="600">
public Long sadd (final byte [] key, final byte []...members) {
    return pipeline.sadd (key, members).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="653" endline="655">
public Boolean sismember (final String key, final String member) {
    return pipeline.sismember (key, member).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="658" endline="660">
public Boolean sismember (final byte [] key, final byte [] member) {
    return pipeline.sismember (key, member).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="663" endline="665">
public Set < String > smembers (final String key) {
    return pipeline.smembers (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="668" endline="670">
public Set < byte [] > smembers (final byte [] key) {
    return pipeline.smembers (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="703" endline="705">
public Long srem (final String key, final String...members) {
    return pipeline.srem (key, members).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="708" endline="710">
public Long srem (final byte [] key, final byte []...members) {
    return pipeline.srem (key, members).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="733" endline="735">
public String lpop (final String key) {
    return pipeline.lpop (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="738" endline="740">
public byte [] lpop (final byte [] key) {
    return pipeline.lpop (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="743" endline="745">
public Long llen (final String key) {
    return pipeline.llen (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="748" endline="750">
public Long llen (final byte [] key) {
    return pipeline.llen (key).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="753" endline="755">
public List < String > lrange (final String key, final long start, final long end) {
    return pipeline.lrange (key, start, end).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="758" endline="760">
public List < byte [] > lrange (final byte [] key, final long start, final long end) {
    return pipeline.lrange (key, start, end).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="768" endline="770">
public Set < String > keys (final String pattern) {
    return pipeline.keys (pattern).get ();
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="797" endline="799">
public String set (String key, String value, String nxxx, String expx, long time) {
    throw new UnsupportedOperationException (NOT_IMPLEMENTED);
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="1502" endline="1504">
public String set (byte [] key, byte [] value, byte [] nxxx, byte [] expx, long time) {
    throw new UnsupportedOperationException (NOT_IMPLEMENTED);
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="1512" endline="1514">
public Double hincrByFloat (byte [] key, byte [] field, double value) {
    throw new UnsupportedOperationException (NOT_IMPLEMENTED);
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="2077" endline="2079">
public String set (byte [] key, byte [] value, byte [] nxxx) {
    throw new UnsupportedOperationException (NOT_IMPLEMENTED);
}
</source>
<source file="projects/systems/50onRed_mock-jedis/mock-jedis/src/main/java/com/fiftyonred/mock_jedis/MockJedis.java" startline="2082" endline="2084">
public String set (byte [] key, byte [] value, byte [] nxxx, byte [] expx, int time) {
    throw new UnsupportedOperationException (NOT_IMPLEMENTED);
}
</source>
